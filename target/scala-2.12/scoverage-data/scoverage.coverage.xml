<statements>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>137</id><start>2272</start><end>2299</end><line>45</line><description>sc.txServiceConfig.hostname</description><symbolName>com.accounts.config.HttpConfiguration.hostname</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>146</id><start>2587</start><end>2626</end><line>50</line><description>classOf[com.accounts.domain.AccountDetailsWithTransactions]</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>toLogEntry</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>218</id><start>1713</start><end>1713</end><line>49</line><description>util.this.ApplyConverter.hac1[akka.http.scaladsl.model.HttpRequest]</description><symbolName>akka.http.scaladsl.server.util.ApplyConverterInstances.hac1</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>227</id><start>2185</start><end>2195</end><line>66</line><description>akka.http.scaladsl.server.Directives.LongNumber</description><symbolName>akka.http.scaladsl.server.PathMatchers.LongNumber</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetail.scala</source><package>com.accounts.domain</package><class>AccountDetail</class><classType>Class</classType><fullClassName>com.accounts.domain.AccountDetail</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetail.scala</path><id>92</id><start>355</start><end>380</end><line>12</line><description>org.json4s.native.Serialization.write[com.accounts.domain.AccountDetail](this)(AccountDetail.this.formats)</description><symbolName>org.json4s.native.Serialization.write</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionDetails.scala</source><package>com.accounts.domain</package><class>TransactionDetails</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionDetails</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionDetails.scala</path><id>101</id><start>346</start><end>357</end><line>10</line><description>org.json4s.NoTypeHints</description><symbolName>org.json4s.NoTypeHints</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>200</id><start>957</start><end>1168</end><line>23</line><description>akka.http.scaladsl.server.ExceptionHandler.apply(({
  @SerialVersionUID(value = 0) final &lt;synthetic&gt; class $anonfun extends scala.runtime.AbstractPartialFunction[Throwable,akka.http.scaladsl.server.Route] with Serializable {
    def &lt;init&gt;(): &lt;$anon: Throwable =&gt; akka.http.scaladsl.server.Route&gt; = {
      $anonfun.super.&lt;init&gt;();
      ()
    };
    final override def applyOrElse[A1 &lt;: Throwable, B1 &gt;: akka.http.scaladsl.server.Route](x1: A1, default: A1 =&gt; B1): B1 = ((x1.asInstanceOf[Throwable]: Throwable): Throwable @unchecked) match {
      case (t @ (_: Exception)) =&gt; {
        t.printStackTrace();
        server.this.Directive.addDirectiveApply[(akka.http.scaladsl.model.Uri,)](akka.http.scaladsl.server.Directives.extractUri)(util.this.ApplyConverter.hac1[akka.http.scaladsl.model.Uri]).apply(((uri: akka.http.scaladsl.model.Uri) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
          &lt;artifact&gt; val x$1: akka.http.scaladsl.model.StatusCodes.ServerError = akka.http.scaladsl.model.StatusCodes.InternalServerError;
          &lt;artifact&gt; val x$2: akka.http.scaladsl.model.HttpEntity.Strict = model.this.HttpEntity.apply(&quot;Error &quot;.+(t.getMessage()));
          &lt;artifact&gt; val x$3: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
          &lt;artifact&gt; val x$4: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
          akka.http.scaladsl.model.HttpResponse.apply(x$1, x$3, x$2, x$4)
        })(marshalling.this.Marshaller.fromResponse))))
      }
      case (defaultCase$ @ _) =&gt; default.apply(x1)
    };
    final def isDefinedAt(x1: Throwable): Boolean = ((x1.asInstanceOf[Throwable]: Throwable): Throwable @unchecked) match {
      case (t @ (_: Exception)) =&gt; true
      case (defaultCase$ @ _) =&gt; false
    }
  };
  new $anonfun()
}: PartialFunction[Throwable,akka.http.scaladsl.server.Route]))</description><symbolName>akka.http.scaladsl.server.ExceptionHandler.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>173</id><start>590</start><end>608</end><line>17</line><description>akka.http.scaladsl.model.MediaTypes.application/json</description><symbolName>akka.http.scaladsl.model.MediaTypes.application/json</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>apiRoutes</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>209</id><start>1499</start><end>1505</end><line>40</line><description>AccountsRoutes.this.routes(mat)</description><symbolName>com.accounts.routes.AccountsRoutes.routes</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>182</id><start>923</start><end>996</end><line>26</line><description>throw new scala.`package`.IllegalArgumentException(akka.http.scaladsl.model.StatusCodes.BadRequest.defaultMessage)</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Throw</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>191</id><start>1129</start><end>1152</end><line>27</line><description>model.this.HttpEntity.apply(&quot;Error &quot;.+(t.getMessage()))</description><symbolName>akka.http.scaladsl.model.HttpEntity.apply</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>254</id><start>2596</start><end>2676</end><line>73</line><description>akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
  &lt;artifact&gt; val x$8: akka.http.scaladsl.model.StatusCode = x;
  &lt;artifact&gt; val x$9: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
  &lt;artifact&gt; val x$10: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
  &lt;artifact&gt; val x$11: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
  akka.http.scaladsl.model.HttpResponse.apply(x$8, x$10, x$9, x$11)
})(marshalling.this.Marshaller.fromResponse))</description><symbolName>akka.http.scaladsl.server.directives.RouteDirectives.complete</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</source><package>com.accounts.config</package><class>HttpConfiguration</class><classType>Object</classType><fullClassName>com.accounts.config.HttpConfiguration</fullClassName><method>apply</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</path><id>83</id><start>296</start><end>324</end><line>9</line><description>conf.getInt(scala.StringContext.apply(&quot;&quot;, &quot;.port&quot;).s(prefix))</description><symbolName>com.typesafe.config.Config.getInt</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>155</id><start>3135</start><end>3136</end><line>63</line><description>&quot;&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>164</id><start>3387</start><end>3423</end><line>70</line><description>response.getStatusLine().getStatusCode()</description><symbolName>org.apache.http.StatusLine.getStatusCode</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>245</id><start>2473</start><end>2523</end><line>72</line><description>akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))</description><symbolName>akka.http.scaladsl.server.directives.RouteDirectives.complete</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionResponse.scala</source><package>com.accounts.domain</package><class>TransactionResponse</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionResponse</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionResponse.scala</path><id>110</id><start>236</start><end>270</end><line>9</line><description>org.json4s.native.Serialization.formats(org.json4s.NoTypeHints)</description><symbolName>org.json4s.Serialization.formats</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>deserialize</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>119</id><start>1178</start><end>1232</end><line>26</line><description>GsonListAdapter.this.scalaListTypeToJava(t.asInstanceOf[java.lang.reflect.ParameterizedType])</description><symbolName>com.accounts.http.GsonListAdapter.scalaListTypeToJava</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>scalaListTypeToJava</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>128</id><start>1823</start><end>1847</end><line>37</line><description>t.getActualTypeArguments()</description><symbolName>java.lang.reflect.ParameterizedType.getActualTypeArguments</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>236</id><start>2350</start><end>2380</end><line>70</line><description>akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any]))</description><symbolName>akka.http.scaladsl.server.directives.FutureDirectives.onSuccess</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>23</id><start>673</start><end>684</end><line>22</line><description>Application.this.actorSystem</description><symbolName>Application.actorSystem</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetailsWithTransactions.scala</source><package>com.accounts.domain</package><class>AccountDetailsWithTransactions</class><classType>Class</classType><fullClassName>com.accounts.domain.AccountDetailsWithTransactions</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetailsWithTransactions.scala</path><id>95</id><start>428</start><end>428</end><line>13</line><description>AccountDetailsWithTransactions.this.formats</description><symbolName>com.accounts.domain.AccountDetailsWithTransactions.formats</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionDetails.scala</source><package>com.accounts.domain</package><class>TransactionDetails</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionDetails</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionDetails.scala</path><id>104</id><start>384</start><end>409</end><line>11</line><description>org.json4s.native.Serialization.write[com.accounts.domain.TransactionDetails](this)(TransactionDetails.this.formats)</description><symbolName>org.json4s.native.Serialization.write</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>131</id><start>1943</start><end>2039</end><line>42</line><description>new com.google.gson.GsonBuilder().registerTypeHierarchyAdapter(classOf[scala.collection.immutable.List], new GsonListAdapter()).create()</description><symbolName>com.google.gson.GsonBuilder.create</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>serialize</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>122</id><start>1530</start><end>1563</end><line>32</line><description>t.asInstanceOf[java.lang.reflect.ParameterizedType]</description><symbolName>scala.Any.asInstanceOf</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>194</id><start>1074</start><end>1153</end><line>27</line><description>akka.http.scaladsl.model.HttpResponse.apply(x$1, x$3, x$2, x$4)</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>176</id><start>713</start><end>736</end><line>20</line><description>charset.nioCharset().name()</description><symbolName>java.nio.charset.Charset.name</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>resolveFromCache</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>77</id><start>1587</start><end>1615</end><line>37</line><description>RouterActor.this.actorCache.+[akka.actor.ActorRef](scala.Predef.ArrowAssoc[com.accounts.domain.MessageType](command).-&gt;[akka.actor.ActorRef](ref))</description><symbolName>scala.collection.immutable.Map.+</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</source><package>com.accounts.config</package><class>HttpConfiguration</class><classType>Object</classType><fullClassName>com.accounts.config.HttpConfiguration</fullClassName><method>apply</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</path><id>86</id><start>230</start><end>368</end><line>7</line><description>HttpConfiguration.apply(conf.getString(scala.StringContext.apply(&quot;&quot;, &quot;.hostname&quot;).s(prefix)), conf.getInt(scala.StringContext.apply(&quot;&quot;, &quot;.port&quot;).s(prefix)), conf.getString(scala.StringContext.apply(&quot;&quot;, &quot;.createuri&quot;).s(prefix)))</description><symbolName>com.accounts.config.HttpConfiguration.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>185</id><start>1036</start><end>1046</end><line>26</line><description>akka.http.scaladsl.server.Directives.extractUri</description><symbolName>akka.http.scaladsl.server.directives.BasicDirectives.extractUri</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>158</id><start>3112</start><end>3134</end><line>63</line><description>sc.txServiceConfig.uri</description><symbolName>com.accounts.config.HttpConfiguration.uri</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\AccountsMarshaller.scala</source><package>com.accounts.marshallers</package><class>AccountsMarshaller</class><classType>Object</classType><fullClassName>com.accounts.marshallers.AccountsMarshaller</fullClassName><method>classList</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\AccountsMarshaller.scala</path><id>167</id><start>245</start><end>251</end><line>8</line><description>scala.collection.immutable.Nil.::[Class[com.accounts.domain.AccountDetail]](x$1)</description><symbolName>scala.collection.immutable.List.::</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Object</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>props</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>50</id><start>832</start><end>858</end><line>30</line><description>akka.actor.Props.apply[com.accounts.actors.AccountsActor](new AccountsActor()(ec, rc))((ClassTag.apply[com.accounts.actors.AccountsActor](classOf[com.accounts.actors.AccountsActor]): scala.reflect.ClassTag[com.accounts.actors.AccountsActor]))</description><symbolName>akka.actor.Props.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>364</id><start>755</start><end>765</end><line>19</line><description>new java.util.Date()</description><symbolName>java.util.Date.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>59</id><start>697</start><end>759</end><line>14</line><description>com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.BadRequest, &quot;Invalid Request&quot;)</description><symbolName>com.accounts.domain.GenericHttpResponse.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>373</id><start>904</start><end>941</end><line>22</line><description>CustomerInfoDatabase.this.customerInfo.put(cust3.custiId, cust3)</description><symbolName>scala.collection.mutable.MapLike.put</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>32</id><start>509</start><end>509</end><line>16</line><description>AccountsActor.this.rc</description><symbolName>com.accounts.actors.AccountsActor.rc</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>41</id><start>672</start><end>672</end><line>21</line><description>AccountsActor.this.ec</description><symbolName>com.accounts.actors.AccountsActor.ec</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>props</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>68</id><start>969</start><end>993</end><line>24</line><description>akka.actor.Props.apply[com.accounts.actors.RouterActor](new RouterActor(actors.this.RouterActor.&lt;init&gt;$default$1)(ec, rc))((ClassTag.apply[com.accounts.actors.RouterActor](classOf[com.accounts.actors.RouterActor]): scala.reflect.ClassTag[com.accounts.actors.RouterActor]))</description><symbolName>akka.actor.Props.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>382</id><start>1272</start><end>1293</end><line>32</line><description>custInfo.account.size</description><symbolName>scala.collection.mutable.ListBuffer.size</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>140</id><start>2261</start><end>2366</end><line>45</line><description>scala.StringContext.apply(&quot;http://&quot;, &quot;:&quot;, &quot;&quot;, &quot;/&quot;, &quot;&quot;).s(sc.txServiceConfig.hostname, sc.txServiceConfig.port, sc.txServiceConfig.uri, accountNo)</description><symbolName>scala.StringContext.s</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\handlers\AccountsHandler.scala</source><package>com.accounts.handlers</package><class>AccountsHandler</class><classType>Object</classType><fullClassName>com.accounts.handlers.AccountsHandler</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\handlers\AccountsHandler.scala</path><id>113</id><start>511</start><end>516</end><line>14</line><description>rc.sc</description><symbolName>com.accounts.context.ResourceContext.sc</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>149</id><start>2686</start><end>2693</end><line>52</line><description>scala.Some.apply[com.accounts.domain.AccountDetailsWithTransactions](p)</description><symbolName>scala.Some.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>346</id><start>350</start><end>455</end><line>16</line><description>com.accounts.domain.CustomerInformation.apply(1L, &quot;Mahesh&quot;, &quot;Jadhav&quot;, new java.util.Date(), new java.util.Date(), scala.collection.mutable.ListBuffer.empty[com.accounts.domain.AccountDetail])</description><symbolName>com.accounts.domain.CustomerInformation.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>355</id><start>614</start><end>620</end><line>18</line><description>&quot;Amit&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>53</id><start>567</start><end>567</end><line>11</line><description>RouterActor.this.rc</description><symbolName>com.accounts.actors.RouterActor.rc</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>367</id><start>711</start><end>818</end><line>19</line><description>com.accounts.domain.CustomerInformation.apply(4L, &quot;Siddarth&quot;, &quot;Ananad&quot;, new java.util.Date(), new java.util.Date(), scala.collection.mutable.ListBuffer.empty[com.accounts.domain.AccountDetail])</description><symbolName>com.accounts.domain.CustomerInformation.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>62</id><start>788</start><end>788</end><line>16</line><description>RouterActor.this.context</description><symbolName>akka.actor.Actor.context</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>134</id><start>2327</start><end>2328</end><line>45</line><description>&quot;&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>35</id><start>518</start><end>518</end><line>16</line><description>AccountsActor.this.ec</description><symbolName>com.accounts.actors.AccountsActor.ec</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>376</id><start>961</start><end>961</end><line>23</line><description>()</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</source><package>&lt;empty&gt;</package><class>AccountsServiceApp</class><classType>Object</classType><fullClassName>AccountsServiceApp</fullClassName><method>start</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</path><id>8</id><start>882</start><end>991</end><line>23</line><description>{
  &lt;artifact&gt; val qual$1: akka.http.scaladsl.HttpExt = akka.http.scaladsl.Http.apply(system);
  &lt;artifact&gt; val x$9: akka.stream.scaladsl.Flow[akka.http.scaladsl.model.HttpRequest,akka.http.scaladsl.model.HttpResponse,akka.NotUsed] = {
    &lt;artifact&gt; val x$1: akka.http.scaladsl.server.Route = com.accounts.routes.AccountsRoutes.apply(routerActor)(ec).apiRoutes(mat);
    &lt;artifact&gt; val x$2: akka.http.scaladsl.settings.RoutingSettings = settings.this.RoutingSettings.default(system);
    &lt;artifact&gt; val x$3: akka.http.scaladsl.settings.ParserSettings = settings.this.ParserSettings.default(system);
    &lt;artifact&gt; val x$4: akka.stream.ActorMaterializer = mat;
    &lt;artifact&gt; val x$5: akka.http.scaladsl.server.RoutingLog = server.this.RoutingLog.fromActorSystem(system);
    &lt;artifact&gt; val x$6: scala.concurrent.ExecutionContext = ec;
    &lt;artifact&gt; val x$7: akka.http.scaladsl.server.RejectionHandler = server.this.RouteResult.route2HandlerFlow$default$7(x$1);
    &lt;artifact&gt; val x$8: akka.http.scaladsl.server.ExceptionHandler = server.this.RouteResult.route2HandlerFlow$default$8(x$1);
    server.this.RouteResult.route2HandlerFlow(x$1)(x$2, x$3, x$4, x$5, x$6, x$7, x$8)
  };
  &lt;artifact&gt; val x$10: String = &quot;0.0.0.0&quot;;
  &lt;artifact&gt; val x$11: Int = 9001;
  &lt;artifact&gt; val x$12: akka.http.scaladsl.ConnectionContext = qual$1.bindAndHandle$default$4;
  &lt;artifact&gt; val x$13: akka.http.scaladsl.settings.ServerSettings = qual$1.bindAndHandle$default$5;
  &lt;artifact&gt; val x$14: akka.event.LoggingAdapter = qual$1.bindAndHandle$default$6;
  qual$1.bindAndHandle(x$9, x$10, x$11, x$12, x$13, x$14)(mat)
}.map[akka.Done.type](((x: akka.http.scaladsl.Http.ServerBinding) =&gt; akka.Done))(ec)</description><symbolName>scala.concurrent.Future.map</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>349</id><start>502</start><end>511</end><line>17</line><description>&quot;Bhujari&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>44</id><start>703</start><end>716</end><line>22</line><description>actor.this.`package`.actorRef2Scala(senderRef).!(d)(AccountsActor.this.self)</description><symbolName>akka.actor.ScalaActorRef.!</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>17</id><start>516</start><end>535</end><line>18</line><description>akka.stream.ActorMaterializer.apply(akka.stream.ActorMaterializer.apply$default$1, akka.stream.ActorMaterializer.apply$default$2)(Application.this.actorSystem)</description><symbolName>akka.stream.ActorMaterializer.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>358</id><start>645</start><end>655</end><line>18</line><description>new java.util.Date()</description><symbolName>java.util.Date.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>26</id><start>738</start><end>757</end><line>25</line><description>e.printStackTrace()</description><symbolName>java.lang.Throwable.printStackTrace</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>serialize</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>125</id><start>1637</start><end>1671</end><line>33</line><description>scala.collection.JavaConverters.seqAsJavaListConverter[Any](obj.asInstanceOf[List[Any]]).asJava</description><symbolName>scala.collection.convert.Decorators.AsJava.asJava</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>304</id><start>3438</start><end>3536</end><line>93</line><description>scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;)</description><symbolName>scala.Tuple2.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>331</id><start>4189</start><end>4312</end><line>127</line><description>marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse](akka.http.scaladsl.model.HttpResponse.apply(akka.http.scaladsl.model.StatusCodes.OK, akka.http.scaladsl.model.HttpResponse.apply$default$2, akka.http.scaladsl.model.HttpResponse.apply$default$3, akka.http.scaladsl.model.HttpResponse.apply$default$4).withHeaders(scala.collection.immutable.List.apply[akka.http.scaladsl.model.headers.RawHeader](akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Methods&quot;, &quot;OPTIONS, POST, PUT, GET, DELETE&quot;))))(marshalling.this.Marshaller.fromResponse)</description><symbolName>akka.http.scaladsl.marshalling.ToResponseMarshallable.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>340</id><start>370</start><end>371</end><line>16</line><description>1L</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</source><package>com.accounts.config</package><class>HttpConfiguration</class><classType>Object</classType><fullClassName>com.accounts.config.HttpConfiguration</fullClassName><method>apply</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</path><id>80</id><start>269</start><end>288</end><line>8</line><description>scala.StringContext.apply(&quot;&quot;, &quot;.hostname&quot;).s(prefix)</description><symbolName>scala.StringContext.s</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetail.scala</source><package>com.accounts.domain</package><class>AccountDetail</class><classType>Class</classType><fullClassName>com.accounts.domain.AccountDetail</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetail.scala</path><id>89</id><start>317</start><end>328</end><line>11</line><description>org.json4s.NoTypeHints</description><symbolName>org.json4s.NoTypeHints</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>286</id><start>3196</start><end>3204</end><line>89</line><description>t.toJson</description><symbolName>com.accounts.common.JsonResponse.toJson</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>295</id><start>3291</start><end>3291</end><line>90</line><description>akka.http.scaladsl.model.HttpResponse.apply$default$2</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply$default$2</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\handlers\AccountsHandler.scala</source><package>com.accounts.handlers</package><class>AccountsHandler</class><classType>Object</classType><fullClassName>com.accounts.handlers.AccountsHandler</fullClassName><method>getAccountAndTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\handlers\AccountsHandler.scala</path><id>116</id><start>1665</start><end>2484</end><line>41</line><description>scala.concurrent.Future.apply[com.accounts.domain.GenericHttpResponse](rc.db.checkCustomerId(custId) match {
  case true =&gt; rc.db.getCustomerDetails(custId) match {
    case (value: com.accounts.domain.CustomerInformation)Some[com.accounts.domain.CustomerInformation]((custInfo @ _)) =&gt; {
      val accountDetailsWithTransactionsList: List[com.accounts.domain.AccountDetailsWithTransactions] = custInfo.account.map[com.accounts.domain.AccountDetailsWithTransactions, scala.collection.mutable.ListBuffer[com.accounts.domain.AccountDetailsWithTransactions]](((a: com.accounts.domain.AccountDetail) =&gt; {
  &lt;artifact&gt; val x$4: Long = a.accountId;
  &lt;artifact&gt; val x$5: com.accounts.config.ServiceConfiguration = sc;
  &lt;artifact&gt; val x$6: com.accounts.http.RawHttpExecutor = transActionManager.getTransactions$default$3(x$4);
  transActionManager.getTransactions(x$4)(x$5, x$6)
} match {
  case (value: com.accounts.domain.AccountDetailsWithTransactions)Some[com.accounts.domain.AccountDetailsWithTransactions]((p @ _)) =&gt; p
  case scala.None =&gt; com.accounts.domain.AccountDetailsWithTransactions.apply(a.accountId, 0.0, scala.collection.immutable.Nil)
}))(mutable.this.ListBuffer.canBuildFrom[com.accounts.domain.AccountDetailsWithTransactions]).toList;
      com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.OK, com.accounts.domain.CustomerInformationResponse.apply(custInfo.custiId, custInfo.firstName, custInfo.lastName, custInfo.createDate, custInfo.updateDate, accountDetailsWithTransactionsList))
    }
    case scala.None =&gt; com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.NotFound, &quot;Invalid Customer Id&quot;)
  }
  case false =&gt; com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.NotFound, &quot;Invalid Customer Id&quot;)
})(ec)</description><symbolName>scala.concurrent.Future.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\CustomerInformationResponse.scala</source><package>com.accounts.domain</package><class>CustomerInformationResponse</class><classType>Class</classType><fullClassName>com.accounts.domain.CustomerInformationResponse</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\CustomerInformationResponse.scala</path><id>98</id><start>410</start><end>444</end><line>11</line><description>org.json4s.native.Serialization.formats(org.json4s.NoTypeHints)</description><symbolName>org.json4s.Serialization.formats</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>defaultResolver</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>71</id><start>1310</start><end>1314</end><line>29</line><description>scala.None</description><symbolName>scala.None</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionRequest.scala</source><package>com.accounts.domain</package><class>TransactionRequest</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionRequest</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionRequest.scala</path><id>107</id><start>347</start><end>347</end><line>10</line><description>TransactionRequest.this.formats</description><symbolName>com.accounts.domain.TransactionRequest.formats</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>313</id><start>2884</start><end>3586</end><line>82</line><description>server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.post).apply(server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.pathEnd).apply(server.this.Directive.addDirectiveApply[(com.accounts.domain.CreateLinkedAccount,)](akka.http.scaladsl.server.Directives.entity[com.accounts.domain.CreateLinkedAccount](akka.http.scaladsl.server.Directives.as[com.accounts.domain.CreateLinkedAccount](unmarshalling.this.Unmarshaller.messageUnmarshallerFromEntityUnmarshaller[com.accounts.domain.CreateLinkedAccount](com.accounts.marshallers.Json4sMarshaller.unmarshaller[com.accounts.domain.CreateLinkedAccount](scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount]), com.accounts.marshallers.AccountsMarshaller.serialization, com.accounts.marshallers.AccountsMarshaller.formats)))))(util.this.ApplyConverter.hac1[com.accounts.domain.CreateLinkedAccount]).apply(((c: com.accounts.domain.CreateLinkedAccount) =&gt; {
  val genericHttpResponse: scala.concurrent.Future[Any] = {
    &lt;artifact&gt; val qual$2: akka.pattern.AskableActorRef = akka.pattern.`package`.ask(rootActor);
    &lt;artifact&gt; val x$12: com.accounts.domain.CreateLinkedAccount = c;
    &lt;artifact&gt; val x$13: akka.util.Timeout = timeout;
    &lt;artifact&gt; val x$14: akka.actor.ActorRef = qual$2.?$default$3(x$12);
    qual$2.?(x$12)(x$13, x$14)
  };
  server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$3: Any) =&gt; x0$3 match {
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
      &lt;artifact&gt; val x$15: akka.http.scaladsl.model.StatusCode = x;
      &lt;artifact&gt; val x$16: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
      &lt;artifact&gt; val x$17: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
      &lt;artifact&gt; val x$18: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
      akka.http.scaladsl.model.HttpResponse.apply(x$15, x$17, x$16, x$18)
    })(marshalling.this.Marshaller.fromResponse))
    case (p @ _) =&gt; {
      scala.Predef.println(p);
      akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
    }
  }))
}))))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>322</id><start>4163</start><end>4170</end><line>125</line><description>akka.http.scaladsl.server.Directives.options</description><symbolName>akka.http.scaladsl.server.directives.MethodDirectives.options</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>385</id><start>1307</start><end>1311</end><line>32</line><description>true</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>11</id><start>391</start><end>423</end><line>16</line><description>java.util.concurrent.Executors.newFixedThreadPool(10)</description><symbolName>java.util.concurrent.Executors.newFixedThreadPool</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>307</id><start>3446</start><end>3446</end><line>93</line><description>marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToResponseMarshallers.fromStatusCodeAndValue</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>388</id><start>1371</start><end>1391</end><line>34</line><description>scala.Some.apply[com.accounts.domain.AccountDetail](accountDetails)</description><symbolName>scala.Some.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>resolveFromCache</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>74</id><start>1569</start><end>1576</end><line>36</line><description>props.apply()</description><symbolName>scala.Function0.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>56</id><start>688</start><end>694</end><line>14</line><description>RouterActor.this.sender()</description><symbolName>akka.actor.Actor.sender</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>262</id><start>2743</start><end>2841</end><line>76</line><description>marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller))</description><symbolName>akka.http.scaladsl.marshalling.ToResponseMarshallable.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>298</id><start>3303</start><end>3303</end><line>90</line><description>marshalling.this.Marshaller.fromResponse</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToResponseMarshallers.fromResponse</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>370</id><start>880</start><end>893</end><line>21</line><description>cust2.custiId</description><symbolName>com.accounts.domain.CustomerInformation.custiId</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>29</id><start>466</start><end>472</end><line>15</line><description>AccountsActor.this.sender()</description><symbolName>akka.actor.Actor.sender</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>343</id><start>392</start><end>402</end><line>16</line><description>new java.util.Date()</description><symbolName>java.util.Date.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>38</id><start>617</start><end>623</end><line>20</line><description>AccountsActor.this.sender()</description><symbolName>akka.actor.Actor.sender</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>379</id><start>1094</start><end>1138</end><line>29</line><description>CustomerInfoDatabase.this.customerInfo.get(createLinkedAccount.custId)</description><symbolName>scala.collection.MapLike.get</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>352</id><start>536</start><end>575</end><line>17</line><description>scala.collection.mutable.ListBuffer.empty[com.accounts.domain.AccountDetail]</description><symbolName>scala.collection.generic.GenericCompanion.empty</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>47</id><start>688</start><end>688</end><line>21</line><description>()</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>244</id><start>2482</start><end>2522</end><line>72</line><description>marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller))</description><symbolName>akka.http.scaladsl.marshalling.ToResponseMarshallable.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>226</id><start>2167</start><end>2170</end><line>65</line><description>akka.http.scaladsl.server.Directives.get</description><symbolName>akka.http.scaladsl.server.directives.MethodDirectives.get</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>253</id><start>2605</start><end>2675</end><line>73</line><description>marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
  &lt;artifact&gt; val x$8: akka.http.scaladsl.model.StatusCode = x;
  &lt;artifact&gt; val x$9: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
  &lt;artifact&gt; val x$10: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
  &lt;artifact&gt; val x$11: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
  akka.http.scaladsl.model.HttpResponse.apply(x$8, x$10, x$9, x$11)
})(marshalling.this.Marshaller.fromResponse)</description><symbolName>akka.http.scaladsl.marshalling.ToResponseMarshallable.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>325</id><start>4189</start><end>4189</end><line>127</line><description>akka.http.scaladsl.model.HttpResponse.apply$default$3</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply$default$3</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>361</id><start>731</start><end>732</end><line>19</line><description>4L</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>20</id><start>567</start><end>567</end><line>19</line><description>Application.this.mat</description><symbolName>Application.mat</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>corsHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>334</id><start>4434</start><end>4457</end><line>133</line><description>CORSHandler.this.addAccessControlHeaders</description><symbolName>com.accounts.routes.CORSHandler.addAccessControlHeaders</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</source><package>&lt;empty&gt;</package><class>AccountsServiceApp</class><classType>Object</classType><fullClassName>AccountsServiceApp</fullClassName><method>start</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</path><id>2</id><start>641</start><end>674</end><line>18</line><description>com.typesafe.config.ConfigFactory.load(&quot;application&quot;)</description><symbolName>com.typesafe.config.ConfigFactory.load</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>235</id><start>2360</start><end>2379</end><line>70</line><description>directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])</description><symbolName>akka.http.scaladsl.server.directives.OnSuccessMagnet.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>289</id><start>3175</start><end>3175</end><line>89</line><description>marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)</description><symbolName>akka.http.scaladsl.marshalling.LowPriorityToResponseMarshallerImplicits.liftMarshaller</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>316</id><start>3673</start><end>3717</end><line>107</line><description>akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;)</description><symbolName>akka.http.scaladsl.model.headers.RawHeader.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>65</id><start>619</start><end>619</end><line>12</line><description>new $anonfun()</description><symbolName>com.accounts.actors.RouterActor.$anonfun.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>271</id><start>2932</start><end>2932</end><line>85</line><description>com.accounts.marshallers.AccountsMarshaller.formats</description><symbolName>com.accounts.marshallers.AccountsMarshaller.formats</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>280</id><start>3037</start><end>3037</end><line>87</line><description>util.this.Tupler.forAnyRef[Any]</description><symbolName>akka.http.scaladsl.server.util.LowerPriorityTupler.forAnyRef</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</source><package>&lt;empty&gt;</package><class>AccountsServiceApp</class><classType>Object</classType><fullClassName>AccountsServiceApp</fullClassName><method>start</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</path><id>5</id><start>842</start><end>859</end><line>21</line><description>com.accounts.actors.RouterActor.props()(ec, rc)</description><symbolName>com.accounts.actors.RouterActor.props</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>319</id><start>3660</start><end>3883</end><line>105</line><description>scala.collection.immutable.List.apply[akka.http.scaladsl.model.headers.RawHeader](akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;), akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Credentials&quot;, &quot;true&quot;), akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Headers&quot;, &quot;Authorization, Content-Type, X-Requested-With&quot;))</description><symbolName>scala.collection.immutable.List.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>184</id><start>1009</start><end>1028</end><line>25</line><description>t.printStackTrace()</description><symbolName>java.lang.Throwable.printStackTrace</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>193</id><start>1074</start><end>1074</end><line>27</line><description>akka.http.scaladsl.model.HttpResponse.apply$default$4</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply$default$4</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>265</id><start>2180</start><end>2865</end><line>66</line><description>server.this.Directive.addDirectiveApply[(Long,)](akka.http.scaladsl.server.Directives.path[(Long,)](akka.http.scaladsl.server.Directives.LongNumber))(util.this.ApplyConverter.hac1[Long]).apply(((custId: Long) =&gt; {
  val getAccountsMessage: com.accounts.domain.GetAccountDetailsRequest = com.accounts.domain.GetAccountDetailsRequest.apply(custId);
  val genericHttpResponse: scala.concurrent.Future[Any] = {
    &lt;artifact&gt; val qual$1: akka.pattern.AskableActorRef = akka.pattern.`package`.ask(rootActor);
    &lt;artifact&gt; val x$5: com.accounts.domain.GetAccountDetailsRequest = getAccountsMessage;
    &lt;artifact&gt; val x$6: akka.util.Timeout = timeout;
    &lt;artifact&gt; val x$7: akka.actor.ActorRef = qual$1.?$default$3(x$5);
    qual$1.?(x$5)(x$6, x$7)
  };
  server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$2: Any) =&gt; x0$2 match {
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
      &lt;artifact&gt; val x$8: akka.http.scaladsl.model.StatusCode = x;
      &lt;artifact&gt; val x$9: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
      &lt;artifact&gt; val x$10: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
      &lt;artifact&gt; val x$11: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
      akka.http.scaladsl.model.HttpResponse.apply(x$8, x$10, x$9, x$11)
    })(marshalling.this.Marshaller.fromResponse))
    case (p @ _) =&gt; {
      scala.Predef.println(p);
      akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
    }
  }))
}))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>301</id><start>3410</start><end>3420</end><line>92</line><description>scala.Predef.println(p)</description><symbolName>scala.Predef.println</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>175</id><start>522</start><end>609</end><line>17</line><description>unmarshalling.this.Unmarshaller.EnhancedFromEntityUnmarshaller[akka.util.ByteString](akka.http.scaladsl.unmarshalling.Unmarshaller.byteStringUnmarshaller).forContentTypes(model.this.ContentTypeRange.apply(akka.http.scaladsl.model.MediaTypes.application/json))</description><symbolName>akka.http.scaladsl.unmarshalling.Unmarshaller.EnhancedFromEntityUnmarshaller.forContentTypes</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>256</id><start>2752</start><end>2783</end><line>76</line><description>akka.http.scaladsl.model.StatusCodes.InternalServerError</description><symbolName>akka.http.scaladsl.model.StatusCodes.InternalServerError</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>addCORSHeaders</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>337</id><start>4710</start><end>4729</end><line>145</line><description>CORSHandler.this.corsResponseHeaders</description><symbolName>com.accounts.routes.CORSHandler.corsResponseHeaders</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>apiRoutes</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>211</id><start>1455</start><end>1527</end><line>38</line><description>AccountsRoutes.this.logAccess(AccountsRoutes.this.corsHandler(AccountsRoutes.this.routes(mat)))</description><symbolName>com.accounts.routes.AccountsRoutes.logAccess</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>283</id><start>3036</start><end>3036</end><line>87</line><description>util.this.ApplyConverter.hac1[Any]</description><symbolName>akka.http.scaladsl.server.util.ApplyConverterInstances.hac1</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>292</id><start>3336</start><end>3354</end><line>90</line><description>akka.http.scaladsl.model.MediaTypes.application/json</description><symbolName>akka.http.scaladsl.model.MediaTypes.application/json</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>166</id><start>3473</start><end>3478</end><line>72</line><description>false</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>247</id><start>2650</start><end>2668</end><line>73</line><description>model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json)</description><symbolName>akka.http.scaladsl.model.ContentType.apply</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>274</id><start>2930</start><end>2953</end><line>85</line><description>akka.http.scaladsl.server.Directives.as[com.accounts.domain.CreateLinkedAccount](unmarshalling.this.Unmarshaller.messageUnmarshallerFromEntityUnmarshaller[com.accounts.domain.CreateLinkedAccount](com.accounts.marshallers.Json4sMarshaller.unmarshaller[com.accounts.domain.CreateLinkedAccount](scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount]), com.accounts.marshallers.AccountsMarshaller.serialization, com.accounts.marshallers.AccountsMarshaller.formats)))</description><symbolName>akka.http.scaladsl.server.directives.MarshallingDirectives.as</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>14</id><start>516</start><end>516</end><line>18</line><description>akka.stream.ActorMaterializer.apply$default$1</description><symbolName>akka.stream.ActorMaterializer.apply$default$1</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>328</id><start>4230</start><end>4311</end><line>127</line><description>scala.collection.immutable.List.apply[akka.http.scaladsl.model.headers.RawHeader](akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Methods&quot;, &quot;OPTIONS, POST, PUT, GET, DELETE&quot;))</description><symbolName>scala.collection.immutable.List.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>toLogEntry</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>220</id><start>1713</start><end>2005</end><line>49</line><description>server.this.Directive.addDirectiveApply[(akka.http.scaladsl.model.HttpRequest,)](akka.http.scaladsl.server.Directives.extractRequest)(util.this.ApplyConverter.hac1[akka.http.scaladsl.model.HttpRequest]).apply(((request: akka.http.scaladsl.model.HttpRequest) =&gt; server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.logResult(directives.this.LoggingMagnet.forMessageFromFullShow[akka.http.scaladsl.server.RouteResult](toLogEntry(scala.StringContext.apply(&quot;&quot;, &quot; &quot;, &quot; ==&gt; &quot;).s(request.method.name(), request.uri), ((x0$1: Any) =&gt; x0$1 match {
  case (c @ (_: akka.http.scaladsl.server.RouteResult.Complete)) =&gt; c.response.status.toString()
  case (x @ _) =&gt; scala.StringContext.apply(&quot;unknown response part of type &quot;, &quot;&quot;).s(x.getClass())
}))))).apply(innerRoute)))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>229</id><start>2184</start><end>2184</end><line>66</line><description>util.this.ApplyConverter.hac1[Long]</description><symbolName>akka.http.scaladsl.server.util.ApplyConverterInstances.hac1</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>202</id><start>1215</start><end>1232</end><line>31</line><description>scala.concurrent.duration.`package`.DurationInt(6000).milliseconds</description><symbolName>scala.concurrent.duration.DurationConversions.milliseconds</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>238</id><start>2493</start><end>2511</end><line>72</line><description>akka.http.scaladsl.model.MediaTypes.application/json</description><symbolName>akka.http.scaladsl.model.MediaTypes.application/json</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>310</id><start>3027</start><end>3553</end><line>87</line><description>server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$3: Any) =&gt; x0$3 match {
  case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
  case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
    &lt;artifact&gt; val x$15: akka.http.scaladsl.model.StatusCode = x;
    &lt;artifact&gt; val x$16: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
    &lt;artifact&gt; val x$17: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
    &lt;artifact&gt; val x$18: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
    akka.http.scaladsl.model.HttpResponse.apply(x$15, x$17, x$16, x$18)
  })(marshalling.this.Marshaller.fromResponse))
  case (p @ _) =&gt; {
    scala.Predef.println(p);
    akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
  }
}))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>277</id><start>3000</start><end>3009</end><line>86</line><description>akka.pattern.`package`.ask(rootActor)</description><symbolName>akka.pattern.AskSupport.ask</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>142</id><start>2412</start><end>2441</end><line>46</line><description>httpExecutor.execute(httpGet)</description><symbolName>com.accounts.http.RawHttpExecutor.execute</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>151</id><start>2747</start><end>2806</end><line>55</line><description>throw new scala.`package`.RuntimeException(&quot;Error in getting transactions&quot;)</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Throw</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>223</id><start>2144</start><end>2144</end><line>63</line><description>TupleOps.this.Join.join0P[Unit]</description><symbolName>akka.http.scaladsl.server.util.TupleOps.Join.join0P</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>250</id><start>2605</start><end>2605</end><line>73</line><description>akka.http.scaladsl.model.HttpResponse.apply$default$4</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply$default$4</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>232</id><start>2319</start><end>2319</end><line>69</line><description>qual$1.?$default$3(x$5)</description><symbolName>akka.pattern.AskableActorRef.?$default$3</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>259</id><start>2751</start><end>2751</end><line>76</line><description>scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError]</description><symbolName>scala.Predef.$conforms</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>serialize</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>124</id><start>1637</start><end>1664</end><line>33</line><description>obj.asInstanceOf[List[Any]]</description><symbolName>scala.Any.asInstanceOf</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>133</id><start>2300</start><end>2302</end><line>45</line><description>&quot;:&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionRequest.scala</source><package>com.accounts.domain</package><class>TransactionRequest</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionRequest</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionRequest.scala</path><id>106</id><start>268</start><end>302</end><line>9</line><description>org.json4s.native.Serialization.formats(org.json4s.NoTypeHints)</description><symbolName>org.json4s.Serialization.formats</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>routes</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>205</id><start>1325</start><end>1325</end><line>33</line><description>AccountsRoutes.this.timeout</description><symbolName>com.accounts.routes.AccountsRoutes.timeout</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>toLogEntry</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>214</id><start>1663</start><end>1676</end><line>48</line><description>marker.+(f.apply(r))</description><symbolName>java.lang.String.+</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>160</id><start>3031</start><end>3137</end><line>63</line><description>new org.apache.http.client.methods.HttpPost(scala.StringContext.apply(&quot;http://&quot;, &quot;:&quot;, &quot;&quot;, &quot;&quot;).s(sc.txServiceConfig.hostname, sc.txServiceConfig.port, sc.txServiceConfig.uri))</description><symbolName>org.apache.http.client.methods.HttpPost.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\AccountsMarshaller.scala</source><package>com.accounts.marshallers</package><class>AccountsMarshaller</class><classType>Object</classType><fullClassName>com.accounts.marshallers.AccountsMarshaller</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\AccountsMarshaller.scala</path><id>169</id><start>310</start><end>335</end><line>10</line><description>org.json4s.ShortTypeHints.apply(AccountsMarshaller.this.classList)</description><symbolName>org.json4s.ShortTypeHints.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>178</id><start>749</start><end>783</end><line>21</line><description>new com.google.gson.JsonParser().parse(dataString)</description><symbolName>com.google.gson.JsonParser.parse</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\handlers\AccountsHandler.scala</source><package>com.accounts.handlers</package><class>AccountsHandler</class><classType>Object</classType><fullClassName>com.accounts.handlers.AccountsHandler</fullClassName><method>getAccountAndTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\handlers\AccountsHandler.scala</path><id>115</id><start>1654</start><end>1659</end><line>40</line><description>rc.sc</description><symbolName>com.accounts.context.ResourceContext.sc</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>187</id><start>1087</start><end>1118</end><line>27</line><description>akka.http.scaladsl.model.StatusCodes.InternalServerError</description><symbolName>akka.http.scaladsl.model.StatusCodes.InternalServerError</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>196</id><start>1074</start><end>1153</end><line>27</line><description>marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
  &lt;artifact&gt; val x$1: akka.http.scaladsl.model.StatusCodes.ServerError = akka.http.scaladsl.model.StatusCodes.InternalServerError;
  &lt;artifact&gt; val x$2: akka.http.scaladsl.model.HttpEntity.Strict = model.this.HttpEntity.apply(&quot;Error &quot;.+(t.getMessage()));
  &lt;artifact&gt; val x$3: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
  &lt;artifact&gt; val x$4: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
  akka.http.scaladsl.model.HttpResponse.apply(x$1, x$3, x$2, x$4)
})(marshalling.this.Marshaller.fromResponse)</description><symbolName>akka.http.scaladsl.marshalling.ToResponseMarshallable.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>241</id><start>2482</start><end>2522</end><line>72</line><description>akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson)</description><symbolName>akka.http.scaladsl.model.HttpEntity.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>268</id><start>2900</start><end>2907</end><line>83</line><description>akka.http.scaladsl.server.Directives.pathEnd</description><symbolName>akka.http.scaladsl.server.directives.PathDirectives.pathEnd</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>369</id><start>822</start><end>859</end><line>20</line><description>CustomerInfoDatabase.this.customerInfo.put(cust1.custiId, cust1)</description><symbolName>scala.collection.mutable.MapLike.put</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>181</id><start>890</start><end>909</end><line>25</line><description>e.printStackTrace()</description><symbolName>java.lang.Throwable.printStackTrace</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>163</id><start>3348</start><end>3378</end><line>68</line><description>httpExecutor.execute(httpPost)</description><symbolName>com.accounts.http.RawHttpExecutor.execute</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>172</id><start>522</start><end>565</end><line>16</line><description>akka.http.scaladsl.unmarshalling.Unmarshaller.byteStringUnmarshaller</description><symbolName>akka.http.scaladsl.unmarshalling.PredefinedFromEntityUnmarshallers.byteStringUnmarshaller</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>387</id><start>1322</start><end>1361</end><line>33</line><description>custInfo.account.append(accountDetails)</description><symbolName>scala.collection.mutable.BufferLike.append</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>46</id><start>631</start><end>726</end><line>21</line><description>com.accounts.handlers.AccountsHandler.getAccountAndTransactions(cmd.custId, com.accounts.handlers.AccountsHandler.getAccountAndTransactions$default$2)(AccountsActor.this.ec, AccountsActor.this.rc).map[Unit](((d: com.accounts.domain.GenericHttpResponse) =&gt; actor.this.`package`.actorRef2Scala(senderRef).!(d)(AccountsActor.this.self)))(AccountsActor.this.ec)</description><symbolName>scala.concurrent.Future.map</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>deserialize</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>118</id><start>1198</start><end>1231</end><line>26</line><description>t.asInstanceOf[java.lang.reflect.ParameterizedType]</description><symbolName>scala.Any.asInstanceOf</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>scalaListTypeToJava</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>127</id><start>1795</start><end>1821</end><line>37</line><description>classOf[java.util.List]</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>136</id><start>2365</start><end>2366</end><line>45</line><description>&quot;&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>199</id><start>974</start><end>974</end><line>23</line><description>new $anonfun()</description><symbolName>com.accounts.routes.AccountsRoutes.$anonfun.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>apiRoutes</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>208</id><start>1411</start><end>1445</end><line>37</line><description>akka.http.scaladsl.server.Directives.handleExceptions(AccountsRoutes.this.exceptionHandler)</description><symbolName>akka.http.scaladsl.server.directives.ExecutionDirectives.handleExceptions</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>toLogEntry</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>217</id><start>1713</start><end>1727</end><line>49</line><description>akka.http.scaladsl.server.Directives.extractRequest</description><symbolName>akka.http.scaladsl.server.directives.BasicDirectives.extractRequest</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\CustomerInformationResponse.scala</source><package>com.accounts.domain</package><class>CustomerInformationResponse</class><classType>Class</classType><fullClassName>com.accounts.domain.CustomerInformationResponse</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\CustomerInformationResponse.scala</path><id>100</id><start>470</start><end>495</end><line>12</line><description>org.json4s.native.Serialization.write[com.accounts.domain.CustomerInformationResponse](this)(CustomerInformationResponse.this.formats)</description><symbolName>org.json4s.native.Serialization.write</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionResponse.scala</source><package>com.accounts.domain</package><class>TransactionResponse</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionResponse</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionResponse.scala</path><id>109</id><start>258</start><end>269</end><line>9</line><description>org.json4s.NoTypeHints</description><symbolName>org.json4s.NoTypeHints</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</source><package>com.accounts.config</package><class>HttpConfiguration</class><classType>Object</classType><fullClassName>com.accounts.config.HttpConfiguration</fullClassName><method>apply</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</path><id>82</id><start>308</start><end>323</end><line>9</line><description>scala.StringContext.apply(&quot;&quot;, &quot;.port&quot;).s(prefix)</description><symbolName>scala.StringContext.s</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetail.scala</source><package>com.accounts.domain</package><class>AccountDetail</class><classType>Class</classType><fullClassName>com.accounts.domain.AccountDetail</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetail.scala</path><id>91</id><start>374</start><end>374</end><line>12</line><description>AccountDetail.this.formats</description><symbolName>com.accounts.domain.AccountDetail.formats</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>190</id><start>1129</start><end>1152</end><line>27</line><description>&quot;Error &quot;.+(t.getMessage())</description><symbolName>java.lang.String.+</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>55</id><start>536</start><end>583</end><line>11</line><description>RouterActor.this.resolver.getOrElse[Any =&gt; Option[akka.actor.ActorRef]](RouterActor.defaultResolver(RouterActor.this.ec, RouterActor.this.context, RouterActor.this.rc))</description><symbolName>scala.Option.getOrElse</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>64</id><start>647</start><end>810</end><line>15</line><description>RouterActor.this.hierarchyResolver.apply(command).fold[Unit](actor.this.`package`.actorRef2Scala(RouterActor.this.sender()).!(com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.BadRequest, &quot;Invalid Request&quot;))(RouterActor.this.self))(((ref: akka.actor.ActorRef) =&gt; ref.forward(command)(RouterActor.this.context)))</description><symbolName>scala.Option.fold</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>378</id><start>1111</start><end>1137</end><line>29</line><description>createLinkedAccount.custId</description><symbolName>com.accounts.domain.CreateLinkedAccount.custId</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>resolveFromCache</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>73</id><start>1504</start><end>1513</end><line>34</line><description>scala.Some.apply[akka.actor.ActorRef](ref)</description><symbolName>scala.Some.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>145</id><start>2545</start><end>2585</end><line>50</line><description>org.apache.http.util.EntityUtils.toString(response.getEntity())</description><symbolName>org.apache.http.util.EntityUtils.toString</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>154</id><start>3110</start><end>3111</end><line>63</line><description>&quot;&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>360</id><start>591</start><end>696</end><line>18</line><description>com.accounts.domain.CustomerInformation.apply(3L, &quot;Amit&quot;, &quot;Kulkarni&quot;, new java.util.Date(), new java.util.Date(), scala.collection.mutable.ListBuffer.empty[com.accounts.domain.AccountDetail])</description><symbolName>com.accounts.domain.CustomerInformation.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</source><package>com.accounts.config</package><class>HttpConfiguration</class><classType>Object</classType><fullClassName>com.accounts.config.HttpConfiguration</fullClassName><method>apply</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</path><id>85</id><start>331</start><end>367</end><line>10</line><description>conf.getString(scala.StringContext.apply(&quot;&quot;, &quot;.createuri&quot;).s(prefix))</description><symbolName>com.typesafe.config.Config.getString</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>58</id><start>741</start><end>758</end><line>14</line><description>&quot;Invalid Request&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>props</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>67</id><start>975</start><end>992</end><line>24</line><description>new RouterActor(actors.this.RouterActor.&lt;init&gt;$default$1)(ec, rc)</description><symbolName>com.accounts.actors.RouterActor.&lt;init&gt;</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetailsWithTransactions.scala</source><package>com.accounts.domain</package><class>AccountDetailsWithTransactions</class><classType>Class</classType><fullClassName>com.accounts.domain.AccountDetailsWithTransactions</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetailsWithTransactions.scala</path><id>94</id><start>349</start><end>383</end><line>12</line><description>org.json4s.native.Serialization.formats(org.json4s.NoTypeHints)</description><symbolName>org.json4s.Serialization.formats</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>139</id><start>2329</start><end>2351</end><line>45</line><description>sc.txServiceConfig.uri</description><symbolName>com.accounts.config.HttpConfiguration.uri</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>300</id><start>3282</start><end>3362</end><line>90</line><description>akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
  &lt;artifact&gt; val x$15: akka.http.scaladsl.model.StatusCode = x;
  &lt;artifact&gt; val x$16: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
  &lt;artifact&gt; val x$17: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
  &lt;artifact&gt; val x$18: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
  akka.http.scaladsl.model.HttpResponse.apply(x$15, x$17, x$16, x$18)
})(marshalling.this.Marshaller.fromResponse))</description><symbolName>akka.http.scaladsl.server.directives.RouteDirectives.complete</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>381</id><start>1265</start><end>1268</end><line>32</line><description>100</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>40</id><start>647</start><end>647</end><line>21</line><description>com.accounts.handlers.AccountsHandler.getAccountAndTransactions$default$2</description><symbolName>com.accounts.handlers.AccountsHandler.getAccountAndTransactions$default$2</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>354</id><start>611</start><end>612</end><line>18</line><description>3L</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>checkCustomerId</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>390</id><start>1565</start><end>1594</end><line>44</line><description>CustomerInfoDatabase.this.customerInfo.contains(custId)</description><symbolName>scala.collection.MapLike.contains</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Object</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>props</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>49</id><start>838</start><end>857</end><line>30</line><description>new AccountsActor()(ec, rc)</description><symbolName>com.accounts.actors.AccountsActor.&lt;init&gt;</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>scalaListTypeToJava</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>130</id><start>1768</start><end>1854</end><line>37</line><description>sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.make(classOf[java.util.List], t.getActualTypeArguments(), null)</description><symbolName>sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.make</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>corsHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>336</id><start>4434</start><end>4501</end><line>133</line><description>server.this.Directive.addByNameNullaryApply(CORSHandler.this.addAccessControlHeaders).apply(akka.http.scaladsl.server.Directives._enhanceRouteWithConcatenation(CORSHandler.this.preflightRequestHandler).~(r))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</source><package>&lt;empty&gt;</package><class>AccountsServiceApp</class><classType>Object</classType><fullClassName>AccountsServiceApp</fullClassName><method>start</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</path><id>4</id><start>777</start><end>803</end><line>20</line><description>new com.accounts.context.ResourceContext(db, sc)</description><symbolName>com.accounts.context.ResourceContext.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>345</id><start>415</start><end>454</end><line>16</line><description>scala.collection.mutable.ListBuffer.empty[com.accounts.domain.AccountDetail]</description><symbolName>scala.collection.generic.GenericCompanion.empty</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>13</id><start>459</start><end>489</end><line>17</line><description>akka.actor.ActorSystem.apply(&quot;Accounts-System&quot;)</description><symbolName>akka.actor.ActorSystem.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>372</id><start>921</start><end>934</end><line>22</line><description>cust3.custiId</description><symbolName>com.accounts.domain.CustomerInformation.custiId</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>148</id><start>2660</start><end>2664</end><line>51</line><description>scala.None</description><symbolName>scala.None</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>deserialize</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>121</id><start>1369</start><end>1392</end><line>28</line><description>scala.collection.JavaConverters.asScalaBufferConverter[_$4](javaList).asScala.toList</description><symbolName>scala.collection.TraversableOnce.toList</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>157</id><start>3086</start><end>3109</end><line>63</line><description>sc.txServiceConfig.port</description><symbolName>com.accounts.config.HttpConfiguration.port</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>22</id><start>624</start><end>649</end><line>21</line><description>Application.this.portBindingHook_=(scala.Some.apply[akka.Done](o))</description><symbolName>Application.portBindingHook_=</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>363</id><start>745</start><end>753</end><line>19</line><description>&quot;Ananad&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>31</id><start>509</start><end>509</end><line>16</line><description>AccountsActor.this.ec</description><symbolName>com.accounts.actors.AccountsActor.ec</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionDetails.scala</source><package>com.accounts.domain</package><class>TransactionDetails</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionDetails</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionDetails.scala</path><id>103</id><start>403</start><end>403</end><line>11</line><description>TransactionDetails.this.formats</description><symbolName>com.accounts.domain.TransactionDetails.formats</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>resolveFromCache</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>76</id><start>1601</start><end>1615</end><line>37</line><description>scala.Predef.ArrowAssoc[com.accounts.domain.MessageType](command).-&gt;[akka.actor.ActorRef](ref)</description><symbolName>scala.Predef.ArrowAssoc.-&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionResponse.scala</source><package>com.accounts.domain</package><class>TransactionResponse</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionResponse</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionResponse.scala</path><id>112</id><start>296</start><end>321</end><line>10</line><description>org.json4s.native.Serialization.write[com.accounts.domain.TransactionResponse](this)(TransactionResponse.this.formats)</description><symbolName>org.json4s.native.Serialization.write</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>309</id><start>3438</start><end>3536</end><line>93</line><description>akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))</description><symbolName>akka.http.scaladsl.server.directives.RouteDirectives.complete</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>318</id><start>3787</start><end>3876</end><line>111</line><description>akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Headers&quot;, &quot;Authorization, Content-Type, X-Requested-With&quot;)</description><symbolName>akka.http.scaladsl.model.headers.RawHeader.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>327</id><start>4235</start><end>4310</end><line>127</line><description>akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Methods&quot;, &quot;OPTIONS, POST, PUT, GET, DELETE&quot;)</description><symbolName>akka.http.scaladsl.model.headers.RawHeader.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>16</id><start>533</start><end>533</end><line>18</line><description>Application.this.actorSystem</description><symbolName>Application.actorSystem</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>357</id><start>633</start><end>643</end><line>18</line><description>new java.util.Date()</description><symbolName>java.util.Date.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\CustomerInformationResponse.scala</source><package>com.accounts.domain</package><class>CustomerInformationResponse</class><classType>Class</classType><fullClassName>com.accounts.domain.CustomerInformationResponse</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\CustomerInformationResponse.scala</path><id>97</id><start>432</start><end>443</end><line>11</line><description>org.json4s.NoTypeHints</description><symbolName>org.json4s.NoTypeHints</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>312</id><start>2900</start><end>3577</end><line>83</line><description>server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.pathEnd).apply(server.this.Directive.addDirectiveApply[(com.accounts.domain.CreateLinkedAccount,)](akka.http.scaladsl.server.Directives.entity[com.accounts.domain.CreateLinkedAccount](akka.http.scaladsl.server.Directives.as[com.accounts.domain.CreateLinkedAccount](unmarshalling.this.Unmarshaller.messageUnmarshallerFromEntityUnmarshaller[com.accounts.domain.CreateLinkedAccount](com.accounts.marshallers.Json4sMarshaller.unmarshaller[com.accounts.domain.CreateLinkedAccount](scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount]), com.accounts.marshallers.AccountsMarshaller.serialization, com.accounts.marshallers.AccountsMarshaller.formats)))))(util.this.ApplyConverter.hac1[com.accounts.domain.CreateLinkedAccount]).apply(((c: com.accounts.domain.CreateLinkedAccount) =&gt; {
  val genericHttpResponse: scala.concurrent.Future[Any] = {
    &lt;artifact&gt; val qual$2: akka.pattern.AskableActorRef = akka.pattern.`package`.ask(rootActor);
    &lt;artifact&gt; val x$12: com.accounts.domain.CreateLinkedAccount = c;
    &lt;artifact&gt; val x$13: akka.util.Timeout = timeout;
    &lt;artifact&gt; val x$14: akka.actor.ActorRef = qual$2.?$default$3(x$12);
    qual$2.?(x$12)(x$13, x$14)
  };
  server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$3: Any) =&gt; x0$3 match {
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
      &lt;artifact&gt; val x$15: akka.http.scaladsl.model.StatusCode = x;
      &lt;artifact&gt; val x$16: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
      &lt;artifact&gt; val x$17: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
      &lt;artifact&gt; val x$18: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
      akka.http.scaladsl.model.HttpResponse.apply(x$15, x$17, x$16, x$18)
    })(marshalling.this.Marshaller.fromResponse))
    case (p @ _) =&gt; {
      scala.Predef.println(p);
      akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
    }
  }))
})))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</source><package>&lt;empty&gt;</package><class>AccountsServiceApp</class><classType>Object</classType><fullClassName>AccountsServiceApp</fullClassName><method>start</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</path><id>7</id><start>827</start><end>876</end><line>21</line><description>system.actorOf(com.accounts.actors.RouterActor.props()(ec, rc), &quot;router-actor&quot;)</description><symbolName>akka.actor.ActorRefFactory.actorOf</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>348</id><start>493</start><end>501</end><line>17</line><description>&quot;Dinesh&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>resolveFromCache</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>79</id><start>1625</start><end>1634</end><line>38</line><description>scala.Some.apply[akka.actor.ActorRef](ref)</description><symbolName>scala.Some.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</source><package>com.accounts.config</package><class>ServiceConfiguration</class><classType>Object</classType><fullClassName>com.accounts.config.ServiceConfiguration</fullClassName><method>apply</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</path><id>88</id><start>519</start><end>580</end><line>14</line><description>ServiceConfiguration.apply(HttpConfiguration.apply(&quot;txService&quot;, conf))</description><symbolName>com.accounts.config.ServiceConfiguration.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>294</id><start>3325</start><end>3360</end><line>90</line><description>akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg)</description><symbolName>akka.http.scaladsl.model.HttpEntity.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>303</id><start>3480</start><end>3535</end><line>93</line><description>&quot;Unknown error occurred. Please contact administrator.&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>375</id><start>945</start><end>982</end><line>23</line><description>CustomerInfoDatabase.this.customerInfo.put(cust4.custiId, cust4)</description><symbolName>scala.collection.mutable.MapLike.put</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>defaultResolver</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>70</id><start>1246</start><end>1294</end><line>28</line><description>RouterActor.this.resolveFromCache(g, (() =&gt; AccountsActor.props()(ec, rc)))(context)</description><symbolName>com.accounts.actors.RouterActor.resolveFromCache</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>384</id><start>1296</start><end>1306</end><line>32</line><description>new java.util.Date()</description><symbolName>java.util.Date.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>43</id><start>713</start><end>713</end><line>22</line><description>AccountsActor.this.self</description><symbolName>akka.actor.Actor.self</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>52</id><start>567</start><end>567</end><line>11</line><description>RouterActor.this.context</description><symbolName>akka.actor.Actor.context</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>249</id><start>2605</start><end>2605</end><line>73</line><description>akka.http.scaladsl.model.HttpResponse.apply$default$2</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply$default$2</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>276</id><start>2929</start><end>2929</end><line>85</line><description>util.this.ApplyConverter.hac1[com.accounts.domain.CreateLinkedAccount]</description><symbolName>akka.http.scaladsl.server.util.ApplyConverterInstances.hac1</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>258</id><start>2743</start><end>2841</end><line>76</line><description>scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;)</description><symbolName>scala.Tuple2.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>285</id><start>3176</start><end>3194</end><line>89</line><description>model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json)</description><symbolName>akka.http.scaladsl.model.ContentType.apply</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>267</id><start>2884</start><end>2888</end><line>82</line><description>akka.http.scaladsl.server.Directives.post</description><symbolName>akka.http.scaladsl.server.directives.MethodDirectives.post</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>330</id><start>4229</start><end>4229</end><line>127</line><description>marshalling.this.Marshaller.fromResponse</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToResponseMarshallers.fromResponse</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>25</id><start>661</start><end>685</end><line>22</line><description>Application.this.hook_=(scala.Some.apply[akka.actor.ActorSystem](Application.this.actorSystem))</description><symbolName>Application.hook_=</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>339</id><start>281</start><end>302</end><line>12</line><description>scala.collection.mutable.HashMap.empty[Long, com.accounts.domain.CustomerInformation]</description><symbolName>scala.collection.mutable.HashMap.empty</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>366</id><start>778</start><end>817</end><line>19</line><description>scala.collection.mutable.ListBuffer.empty[com.accounts.domain.AccountDetail]</description><symbolName>scala.collection.generic.GenericCompanion.empty</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>34</id><start>533</start><end>546</end><line>17</line><description>actor.this.`package`.actorRef2Scala(senderRef).!(d)(AccountsActor.this.self)</description><symbolName>akka.actor.ScalaActorRef.!</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>240</id><start>2513</start><end>2521</end><line>72</line><description>t.toJson</description><symbolName>com.accounts.common.JsonResponse.toJson</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>addAccessControlHeaders</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>321</id><start>4018</start><end>4057</end><line>119</line><description>akka.http.scaladsl.server.Directives.respondWithHeaders(CORSHandler.this.corsResponseHeaders)</description><symbolName>akka.http.scaladsl.server.directives.RespondWithDirectives.respondWithHeaders</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>61</id><start>688</start><end>759</end><line>14</line><description>actor.this.`package`.actorRef2Scala(RouterActor.this.sender()).!(com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.BadRequest, &quot;Invalid Request&quot;))(RouterActor.this.self)</description><symbolName>akka.actor.ScalaActorRef.!</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>10</id><start>325</start><end>329</end><line>12</line><description>scala.None</description><symbolName>scala.None</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>189</id><start>1140</start><end>1152</end><line>27</line><description>t.getMessage()</description><symbolName>java.lang.Throwable.getMessage</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>225</id><start>2127</start><end>2157</end><line>63</line><description>akka.http.scaladsl.server.Directives.pathPrefix[Unit](akka.http.scaladsl.server.Directives._segmentStringToPathMatcher(&quot;app&quot;)./[Unit](akka.http.scaladsl.server.Directives._segmentStringToPathMatcher(&quot;accounts&quot;))(TupleOps.this.Join.join0P[Unit]))</description><symbolName>akka.http.scaladsl.server.directives.PathDirectives.pathPrefix</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>306</id><start>3446</start><end>3446</end><line>93</line><description>marshalling.this.Marshaller.StringMarshaller</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToEntityMarshallers.StringMarshaller</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>37</id><start>518</start><end>518</end><line>16</line><description>()</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>180</id><start>678</start><end>825</end><line>19</line><description>{
  val dataString: String = data.decodeString(charset.nioCharset().name());
  new com.google.gson.JsonParser().parse(dataString);
  serialization.read[A](dataString)(formats, evidence$1)
}</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Block</treeName><branch>true</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>333</id><start>4163</start><end>4320</end><line>125</line><description>server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.options).apply(akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse](akka.http.scaladsl.model.HttpResponse.apply(akka.http.scaladsl.model.StatusCodes.OK, akka.http.scaladsl.model.HttpResponse.apply$default$2, akka.http.scaladsl.model.HttpResponse.apply$default$3, akka.http.scaladsl.model.HttpResponse.apply$default$4).withHeaders(scala.collection.immutable.List.apply[akka.http.scaladsl.model.headers.RawHeader](akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Methods&quot;, &quot;OPTIONS, POST, PUT, GET, DELETE&quot;))))(marshalling.this.Marshaller.fromResponse)))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</source><package>&lt;empty&gt;</package><class>AccountsServiceApp</class><classType>Object</classType><fullClassName>AccountsServiceApp</fullClassName><method>start</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</path><id>1</id><start>597</start><end>623</end><line>17</line><description>new com.accounts.storage.CustomerInfoDatabase()</description><symbolName>com.accounts.storage.CustomerInfoDatabase.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>342</id><start>382</start><end>390</end><line>16</line><description>&quot;Jadhav&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>apiRoutes</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>207</id><start>1428</start><end>1444</end><line>37</line><description>AccountsRoutes.this.exceptionHandler</description><symbolName>com.accounts.routes.AccountsRoutes.exceptionHandler</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>toLogEntry</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>216</id><start>1654</start><end>1707</end><line>48</line><description>akka.http.scaladsl.server.directives.LogEntry.apply(marker.+(f.apply(r)), akka.event.Logging.InfoLevel)</description><symbolName>akka.http.scaladsl.server.directives.LogEntry.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>288</id><start>3175</start><end>3175</end><line>89</line><description>marshalling.this.Marshaller.MessageEntityMarshaller</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToEntityMarshallers.MessageEntityMarshaller</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>324</id><start>4189</start><end>4189</end><line>127</line><description>akka.http.scaladsl.model.HttpResponse.apply$default$2</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply$default$2</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>297</id><start>3291</start><end>3361</end><line>90</line><description>akka.http.scaladsl.model.HttpResponse.apply(x$15, x$17, x$16, x$18)</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>198</id><start>1036</start><end>1163</end><line>26</line><description>server.this.Directive.addDirectiveApply[(akka.http.scaladsl.model.Uri,)](akka.http.scaladsl.server.Directives.extractUri)(util.this.ApplyConverter.hac1[akka.http.scaladsl.model.Uri]).apply(((uri: akka.http.scaladsl.model.Uri) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
  &lt;artifact&gt; val x$1: akka.http.scaladsl.model.StatusCodes.ServerError = akka.http.scaladsl.model.StatusCodes.InternalServerError;
  &lt;artifact&gt; val x$2: akka.http.scaladsl.model.HttpEntity.Strict = model.this.HttpEntity.apply(&quot;Error &quot;.+(t.getMessage()));
  &lt;artifact&gt; val x$3: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
  &lt;artifact&gt; val x$4: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
  akka.http.scaladsl.model.HttpResponse.apply(x$1, x$3, x$2, x$4)
})(marshalling.this.Marshaller.fromResponse))))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>270</id><start>2932</start><end>2932</end><line>85</line><description>com.accounts.marshallers.AccountsMarshaller.serialization</description><symbolName>com.accounts.marshallers.BaseMarshaller.serialization</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>252</id><start>2617</start><end>2617</end><line>73</line><description>marshalling.this.Marshaller.fromResponse</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToResponseMarshallers.fromResponse</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>279</id><start>3000</start><end>3013</end><line>86</line><description>qual$2.?(x$12)(x$13, x$14)</description><symbolName>akka.pattern.AskableActorRef.?</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>351</id><start>525</start><end>535</end><line>17</line><description>new java.util.Date()</description><symbolName>java.util.Date.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>19</id><start>567</start><end>567</end><line>19</line><description>Application.this.ec</description><symbolName>Application.ec</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>28</id><start>543</start><end>836</end><line>19</line><description>AccountsServiceApp.start()(Application.this.actorSystem, Application.this.ec, Application.this.mat).onComplete[Unit](((x0$1: scala.util.Try[akka.Done]) =&gt; x0$1 match {
  case (value: akka.Done)scala.util.Success[akka.Done]((o @ _)) =&gt; {
    Application.this.portBindingHook_=(scala.Some.apply[akka.Done](o));
    Application.this.hook_=(scala.Some.apply[akka.actor.ActorSystem](Application.this.actorSystem))
  }
  case (exception: Throwable)scala.util.Failure[akka.Done]((e @ _)) =&gt; e.printStackTrace()
}))(Application.this.ec)</description><symbolName>scala.concurrent.Future.onComplete</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>234</id><start>2360</start><end>2360</end><line>70</line><description>util.this.Tupler.forAnyRef[Any]</description><symbolName>akka.http.scaladsl.server.util.LowerPriorityTupler.forAnyRef</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>261</id><start>2751</start><end>2751</end><line>76</line><description>marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToResponseMarshallers.fromStatusCodeAndValue</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>243</id><start>2492</start><end>2492</end><line>72</line><description>marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)</description><symbolName>akka.http.scaladsl.marshalling.LowPriorityToResponseMarshallerImplicits.liftMarshaller</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>315</id><start>2127</start><end>3591</end><line>63</line><description>server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.pathPrefix[Unit](akka.http.scaladsl.server.Directives._segmentStringToPathMatcher(&quot;app&quot;)./[Unit](akka.http.scaladsl.server.Directives._segmentStringToPathMatcher(&quot;accounts&quot;))(TupleOps.this.Join.join0P[Unit]))).apply(akka.http.scaladsl.server.Directives._enhanceRouteWithConcatenation(server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.get).apply(server.this.Directive.addDirectiveApply[(Long,)](akka.http.scaladsl.server.Directives.path[(Long,)](akka.http.scaladsl.server.Directives.LongNumber))(util.this.ApplyConverter.hac1[Long]).apply(((custId: Long) =&gt; {
  val getAccountsMessage: com.accounts.domain.GetAccountDetailsRequest = com.accounts.domain.GetAccountDetailsRequest.apply(custId);
  val genericHttpResponse: scala.concurrent.Future[Any] = {
    &lt;artifact&gt; val qual$1: akka.pattern.AskableActorRef = akka.pattern.`package`.ask(rootActor);
    &lt;artifact&gt; val x$5: com.accounts.domain.GetAccountDetailsRequest = getAccountsMessage;
    &lt;artifact&gt; val x$6: akka.util.Timeout = timeout;
    &lt;artifact&gt; val x$7: akka.actor.ActorRef = qual$1.?$default$3(x$5);
    qual$1.?(x$5)(x$6, x$7)
  };
  server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$2: Any) =&gt; x0$2 match {
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
      &lt;artifact&gt; val x$8: akka.http.scaladsl.model.StatusCode = x;
      &lt;artifact&gt; val x$9: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
      &lt;artifact&gt; val x$10: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
      &lt;artifact&gt; val x$11: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
      akka.http.scaladsl.model.HttpResponse.apply(x$8, x$10, x$9, x$11)
    })(marshalling.this.Marshaller.fromResponse))
    case (p @ _) =&gt; {
      scala.Predef.println(p);
      akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
    }
  }))
})))).~(server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.post).apply(server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.pathEnd).apply(server.this.Directive.addDirectiveApply[(com.accounts.domain.CreateLinkedAccount,)](akka.http.scaladsl.server.Directives.entity[com.accounts.domain.CreateLinkedAccount](akka.http.scaladsl.server.Directives.as[com.accounts.domain.CreateLinkedAccount](unmarshalling.this.Unmarshaller.messageUnmarshallerFromEntityUnmarshaller[com.accounts.domain.CreateLinkedAccount](com.accounts.marshallers.Json4sMarshaller.unmarshaller[com.accounts.domain.CreateLinkedAccount](scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount]), com.accounts.marshallers.AccountsMarshaller.serialization, com.accounts.marshallers.AccountsMarshaller.formats)))))(util.this.ApplyConverter.hac1[com.accounts.domain.CreateLinkedAccount]).apply(((c: com.accounts.domain.CreateLinkedAccount) =&gt; {
  val genericHttpResponse: scala.concurrent.Future[Any] = {
    &lt;artifact&gt; val qual$2: akka.pattern.AskableActorRef = akka.pattern.`package`.ask(rootActor);
    &lt;artifact&gt; val x$12: com.accounts.domain.CreateLinkedAccount = c;
    &lt;artifact&gt; val x$13: akka.util.Timeout = timeout;
    &lt;artifact&gt; val x$14: akka.actor.ActorRef = qual$2.?$default$3(x$12);
    qual$2.?(x$12)(x$13, x$14)
  };
  server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$3: Any) =&gt; x0$3 match {
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
      &lt;artifact&gt; val x$15: akka.http.scaladsl.model.StatusCode = x;
      &lt;artifact&gt; val x$16: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
      &lt;artifact&gt; val x$17: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
      &lt;artifact&gt; val x$18: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
      akka.http.scaladsl.model.HttpResponse.apply(x$15, x$17, x$16, x$18)
    })(marshalling.this.Marshaller.fromResponse))
    case (p @ _) =&gt; {
      scala.Predef.println(p);
      akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
    }
  }))
}))))))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>282</id><start>3027</start><end>3057</end><line>87</line><description>akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any]))</description><symbolName>akka.http.scaladsl.server.directives.FutureDirectives.onSuccess</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>174</id><start>590</start><end>608</end><line>17</line><description>model.this.ContentTypeRange.apply(akka.http.scaladsl.model.MediaTypes.application/json)</description><symbolName>akka.http.scaladsl.model.ContentTypeRange.apply</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>147</id><start>2524</start><end>2627</end><line>50</line><description>TransActionManager.this.json_parser.fromJson[com.accounts.domain.AccountDetailsWithTransactions](org.apache.http.util.EntityUtils.toString(response.getEntity()), classOf[com.accounts.domain.AccountDetailsWithTransactions])</description><symbolName>com.google.gson.Gson.fromJson</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>183</id><start>522</start><end>1010</end><line>18</line><description>unmarshalling.this.Unmarshaller.EnhancedFromEntityUnmarshaller[akka.util.ByteString](unmarshalling.this.Unmarshaller.EnhancedFromEntityUnmarshaller[akka.util.ByteString](akka.http.scaladsl.unmarshalling.Unmarshaller.byteStringUnmarshaller).forContentTypes(model.this.ContentTypeRange.apply(akka.http.scaladsl.model.MediaTypes.application/json))).mapWithCharset[A](((data: akka.util.ByteString, charset: akka.http.scaladsl.model.HttpCharset) =&gt; try {
  val dataString: String = data.decodeString(charset.nioCharset().name());
  new com.google.gson.JsonParser().parse(dataString);
  serialization.read[A](dataString)(formats, evidence$1)
} catch {
  case (e @ (_: Throwable)) =&gt; {
    e.printStackTrace();
    throw new scala.`package`.IllegalArgumentException(akka.http.scaladsl.model.StatusCodes.BadRequest.defaultMessage)
  }
}))</description><symbolName>akka.http.scaladsl.unmarshalling.Unmarshaller.EnhancedFromEntityUnmarshaller.mapWithCharset</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>156</id><start>3055</start><end>3082</end><line>63</line><description>sc.txServiceConfig.hostname</description><symbolName>com.accounts.config.HttpConfiguration.hostname</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>255</id><start>2718</start><end>2728</end><line>75</line><description>scala.Predef.println(p)</description><symbolName>scala.Predef.println</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>228</id><start>2180</start><end>2196</end><line>66</line><description>akka.http.scaladsl.server.Directives.path[(Long,)](akka.http.scaladsl.server.Directives.LongNumber)</description><symbolName>akka.http.scaladsl.server.directives.PathDirectives.path</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>264</id><start>2350</start><end>2854</end><line>70</line><description>server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$2: Any) =&gt; x0$2 match {
  case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
  case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
    &lt;artifact&gt; val x$8: akka.http.scaladsl.model.StatusCode = x;
    &lt;artifact&gt; val x$9: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
    &lt;artifact&gt; val x$10: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
    &lt;artifact&gt; val x$11: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
    akka.http.scaladsl.model.HttpResponse.apply(x$8, x$10, x$9, x$11)
  })(marshalling.this.Marshaller.fromResponse))
  case (p @ _) =&gt; {
    scala.Predef.println(p);
    akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
  }
}))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>scalaListTypeToJava</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>129</id><start>1849</start><end>1853</end><line>37</line><description>null</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>138</id><start>2303</start><end>2326</end><line>45</line><description>sc.txServiceConfig.port</description><symbolName>com.accounts.config.HttpConfiguration.port</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>apiRoutes</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>210</id><start>1475</start><end>1516</end><line>39</line><description>AccountsRoutes.this.corsHandler(AccountsRoutes.this.routes(mat))</description><symbolName>com.accounts.routes.CORSHandler.corsHandler</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>toLogEntry</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>219</id><start>1748</start><end>1998</end><line>53</line><description>server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.logResult(directives.this.LoggingMagnet.forMessageFromFullShow[akka.http.scaladsl.server.RouteResult](toLogEntry(scala.StringContext.apply(&quot;&quot;, &quot; &quot;, &quot; ==&gt; &quot;).s(request.method.name(), request.uri), ((x0$1: Any) =&gt; x0$1 match {
  case (c @ (_: akka.http.scaladsl.server.RouteResult.Complete)) =&gt; c.response.status.toString()
  case (x @ _) =&gt; scala.StringContext.apply(&quot;unknown response part of type &quot;, &quot;&quot;).s(x.getClass())
}))))).apply(innerRoute)</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>291</id><start>3156</start><end>3206</end><line>89</line><description>akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))</description><symbolName>akka.http.scaladsl.server.directives.RouteDirectives.complete</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>deserialize</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>120</id><start>1332</start><end>1363</end><line>27</line><description>jdc.deserialize[Nothing](jsonElement, p)</description><symbolName>com.google.gson.JsonDeserializationContext.deserialize</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>165</id><start>3451</start><end>3455</end><line>71</line><description>true</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>237</id><start>2359</start><end>2359</end><line>70</line><description>util.this.ApplyConverter.hac1[Any]</description><symbolName>akka.http.scaladsl.server.util.ApplyConverterInstances.hac1</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>246</id><start>2650</start><end>2668</end><line>73</line><description>akka.http.scaladsl.model.MediaTypes.application/json</description><symbolName>akka.http.scaladsl.model.MediaTypes.application/json</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>192</id><start>1074</start><end>1074</end><line>27</line><description>akka.http.scaladsl.model.HttpResponse.apply$default$2</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply$default$2</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>201</id><start>1215</start><end>1219</end><line>31</line><description>6000</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>273</id><start>2932</start><end>2932</end><line>85</line><description>unmarshalling.this.Unmarshaller.messageUnmarshallerFromEntityUnmarshaller[com.accounts.domain.CreateLinkedAccount](com.accounts.marshallers.Json4sMarshaller.unmarshaller[com.accounts.domain.CreateLinkedAccount](scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount]), com.accounts.marshallers.AccountsMarshaller.serialization, com.accounts.marshallers.AccountsMarshaller.formats))</description><symbolName>akka.http.scaladsl.unmarshalling.LowerPriorityGenericUnmarshallers.messageUnmarshallerFromEntityUnmarshaller</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>60</id><start>695</start><end>695</end><line>14</line><description>RouterActor.this.self</description><symbolName>akka.actor.Actor.self</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>186</id><start>1036</start><end>1036</end><line>26</line><description>util.this.ApplyConverter.hac1[akka.http.scaladsl.model.Uri]</description><symbolName>akka.http.scaladsl.server.util.ApplyConverterInstances.hac1</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>toLogEntry</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>213</id><start>1672</start><end>1676</end><line>48</line><description>f.apply(r)</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>222</id><start>2146</start><end>2156</end><line>63</line><description>akka.http.scaladsl.server.Directives._segmentStringToPathMatcher(&quot;accounts&quot;)</description><symbolName>akka.http.scaladsl.server.ImplicitPathMatcherConstruction._segmentStringToPathMatcher</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</source><package>com.accounts.config</package><class>ServiceConfiguration</class><classType>Object</classType><fullClassName>com.accounts.config.ServiceConfiguration</fullClassName><method>apply</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</path><id>87</id><start>540</start><end>575</end><line>14</line><description>HttpConfiguration.apply(&quot;txService&quot;, conf)</description><symbolName>com.accounts.config.HttpConfiguration.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetailsWithTransactions.scala</source><package>com.accounts.domain</package><class>AccountDetailsWithTransactions</class><classType>Class</classType><fullClassName>com.accounts.domain.AccountDetailsWithTransactions</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetailsWithTransactions.scala</path><id>96</id><start>409</start><end>434</end><line>13</line><description>org.json4s.native.Serialization.write[com.accounts.domain.AccountDetailsWithTransactions](this)(AccountDetailsWithTransactions.this.formats)</description><symbolName>org.json4s.native.Serialization.write</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\AccountsMarshaller.scala</source><package>com.accounts.marshallers</package><class>AccountsMarshaller</class><classType>Object</classType><fullClassName>com.accounts.marshallers.AccountsMarshaller</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\AccountsMarshaller.scala</path><id>168</id><start>325</start><end>334</end><line>10</line><description>AccountsMarshaller.this.classList</description><symbolName>com.accounts.marshallers.AccountsMarshaller.classList</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>177</id><start>695</start><end>737</end><line>20</line><description>data.decodeString(charset.nioCharset().name())</description><symbolName>akka.util.ByteString.decodeString</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>383</id><start>1245</start><end>1293</end><line>32</line><description>custInfo.custiId.*(100).+(custInfo.account.size)</description><symbolName>scala.Long.+</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>150</id><start>2725</start><end>2729</end><line>54</line><description>scala.None</description><symbolName>scala.None</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>159</id><start>3044</start><end>3136</end><line>63</line><description>scala.StringContext.apply(&quot;http://&quot;, &quot;:&quot;, &quot;&quot;, &quot;&quot;).s(sc.txServiceConfig.hostname, sc.txServiceConfig.port, sc.txServiceConfig.uri)</description><symbolName>scala.StringContext.s</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>132</id><start>2263</start><end>2271</end><line>45</line><description>&quot;http://&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>141</id><start>2249</start><end>2367</end><line>45</line><description>new org.apache.http.client.methods.HttpGet(scala.StringContext.apply(&quot;http://&quot;, &quot;:&quot;, &quot;&quot;, &quot;/&quot;, &quot;&quot;).s(sc.txServiceConfig.hostname, sc.txServiceConfig.port, sc.txServiceConfig.uri, accountNo))</description><symbolName>org.apache.http.client.methods.HttpGet.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionRequest.scala</source><package>com.accounts.domain</package><class>TransactionRequest</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionRequest</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionRequest.scala</path><id>105</id><start>290</start><end>301</end><line>9</line><description>org.json4s.NoTypeHints</description><symbolName>org.json4s.NoTypeHints</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\handlers\AccountsHandler.scala</source><package>com.accounts.handlers</package><class>AccountsHandler</class><classType>Object</classType><fullClassName>com.accounts.handlers.AccountsHandler</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\handlers\AccountsHandler.scala</path><id>114</id><start>522</start><end>1439</end><line>15</line><description>scala.concurrent.Future.apply[com.accounts.domain.GenericHttpResponse](rc.db.checkCustomerId(createLinkedAccount.custId) match {
  case true =&gt; rc.db.createAccount(createLinkedAccount) match {
    case (value: com.accounts.domain.AccountDetail)Some[com.accounts.domain.AccountDetail]((accountDetail @ _)) =&gt; if (createLinkedAccount.initialBalance.&gt;(0))
      {
        &lt;artifact&gt; val x$1: com.accounts.domain.TransactionRequest = com.accounts.domain.TransactionRequest.apply(accountDetail.accountId, createLinkedAccount.initialBalance, &quot;Credit&quot;);
        &lt;artifact&gt; val x$2: com.accounts.config.ServiceConfiguration = sc;
        &lt;artifact&gt; val x$3: com.accounts.http.RawHttpExecutor = transActionManager.postTransaction$default$3(x$1);
        transActionManager.postTransaction(x$1)(x$2, x$3)
      } match {
        case true =&gt; com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.OK, accountDetail)
        case false =&gt; com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unable to create Account: Transaction for Initial Balance Failed&quot;)
      }
    else
      com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.OK, accountDetail)
    case scala.None =&gt; com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unable to create Account&quot;)
  }
  case false =&gt; com.accounts.domain.GenericHttpResponse.apply(akka.http.scaladsl.model.StatusCodes.NotFound, &quot;Invalid Customer Id&quot;)
})(ec)</description><symbolName>scala.concurrent.Future.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>serialize</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>123</id><start>1510</start><end>1564</end><line>32</line><description>GsonListAdapter.this.scalaListTypeToJava(t.asInstanceOf[java.lang.reflect.ParameterizedType])</description><symbolName>com.accounts.http.GsonListAdapter.scalaListTypeToJava</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>195</id><start>1086</start><end>1086</end><line>27</line><description>marshalling.this.Marshaller.fromResponse</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToResponseMarshallers.fromResponse</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>routes</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>204</id><start>1326</start><end>1338</end><line>33</line><description>AccountsRoutes.this.routingActor</description><symbolName>com.accounts.routes.AccountsRoutes.routingActor</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>defaultResolver</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>69</id><start>1156</start><end>1204</end><line>27</line><description>RouterActor.this.resolveFromCache(c, (() =&gt; AccountsActor.props()(ec, rc)))(context)</description><symbolName>com.accounts.actors.RouterActor.resolveFromCache</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>resolveFromCache</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>78</id><start>1587</start><end>1615</end><line>37</line><description>RouterActor.this.actorCache_=(RouterActor.this.actorCache.+[akka.actor.ActorRef](scala.Predef.ArrowAssoc[com.accounts.domain.MessageType](command).-&gt;[akka.actor.ActorRef](ref)))</description><symbolName>com.accounts.actors.RouterActor.actorCache_=</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>231</id><start>2309</start><end>2318</end><line>69</line><description>akka.pattern.`package`.ask(rootActor)</description><symbolName>akka.pattern.AskSupport.ask</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>332</id><start>4180</start><end>4313</end><line>127</line><description>akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse](akka.http.scaladsl.model.HttpResponse.apply(akka.http.scaladsl.model.StatusCodes.OK, akka.http.scaladsl.model.HttpResponse.apply$default$2, akka.http.scaladsl.model.HttpResponse.apply$default$3, akka.http.scaladsl.model.HttpResponse.apply$default$4).withHeaders(scala.collection.immutable.List.apply[akka.http.scaladsl.model.headers.RawHeader](akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Methods&quot;, &quot;OPTIONS, POST, PUT, GET, DELETE&quot;))))(marshalling.this.Marshaller.fromResponse))</description><symbolName>akka.http.scaladsl.server.directives.RouteDirectives.complete</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetail.scala</source><package>com.accounts.domain</package><class>AccountDetail</class><classType>Class</classType><fullClassName>com.accounts.domain.AccountDetail</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetail.scala</path><id>90</id><start>295</start><end>329</end><line>11</line><description>org.json4s.native.Serialization.formats(org.json4s.NoTypeHints)</description><symbolName>org.json4s.Serialization.formats</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>63</id><start>784</start><end>803</end><line>16</line><description>ref.forward(command)(RouterActor.this.context)</description><symbolName>akka.actor.ActorRef.forward</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\CustomerInformationResponse.scala</source><package>com.accounts.domain</package><class>CustomerInformationResponse</class><classType>Class</classType><fullClassName>com.accounts.domain.CustomerInformationResponse</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\CustomerInformationResponse.scala</path><id>99</id><start>489</start><end>489</end><line>12</line><description>CustomerInformationResponse.this.formats</description><symbolName>com.accounts.domain.CustomerInformationResponse.formats</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>386</id><start>1230</start><end>1312</end><line>32</line><description>com.accounts.domain.AccountDetail.apply(custInfo.custiId.*(100).+(custInfo.account.size), new java.util.Date(), true)</description><symbolName>com.accounts.domain.AccountDetail.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>45</id><start>688</start><end>688</end><line>21</line><description>AccountsActor.this.ec</description><symbolName>com.accounts.actors.AccountsActor.ec</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>54</id><start>555</start><end>582</end><line>11</line><description>RouterActor.defaultResolver(RouterActor.this.ec, RouterActor.this.context, RouterActor.this.rc)</description><symbolName>com.accounts.actors.RouterActor.defaultResolver</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>341</id><start>373</start><end>381</end><line>16</line><description>&quot;Mahesh&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\BaseMarshaller.scala</source><package>com.accounts.marshallers</package><class>BaseMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.BaseMarshaller</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\BaseMarshaller.scala</path><id>171</id><start>166</start><end>186</end><line>8</line><description>org.json4s.native.Serialization</description><symbolName>org.json4s.native.Serialization</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>377</id><start>989</start><end>995</end><line>25</line><description>CustomerInfoDatabase.this.init()</description><symbolName>com.accounts.storage.CustomerInfoDatabase.init</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>resolveFromCache</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>72</id><start>1447</start><end>1470</end><line>33</line><description>RouterActor.this.actorCache.get(command)</description><symbolName>scala.collection.MapLike.get</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>144</id><start>2566</start><end>2584</end><line>50</line><description>response.getEntity()</description><symbolName>org.apache.http.HttpResponse.getEntity</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</source><package>com.accounts.config</package><class>HttpConfiguration</class><classType>Object</classType><fullClassName>com.accounts.config.HttpConfiguration</fullClassName><method>apply</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</path><id>81</id><start>254</start><end>289</end><line>8</line><description>conf.getString(scala.StringContext.apply(&quot;&quot;, &quot;.hostname&quot;).s(prefix))</description><symbolName>com.typesafe.config.Config.getString</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>153</id><start>3083</start><end>3085</end><line>63</line><description>&quot;:&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>GsonListAdapter</class><classType>Class</classType><fullClassName>com.accounts.http.GsonListAdapter</fullClassName><method>serialize</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>126</id><start>1623</start><end>1675</end><line>33</line><description>jdc.serialize(scala.collection.JavaConverters.seqAsJavaListConverter[Any](obj.asInstanceOf[List[Any]]).asJava, p)</description><symbolName>com.google.gson.JsonSerializationContext.serialize</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>162</id><start>3277</start><end>3303</end><line>67</line><description>httpPost.setEntity(entity)</description><symbolName>org.apache.http.client.methods.HttpEntityEnclosingRequestBase.setEntity</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>359</id><start>656</start><end>695</end><line>18</line><description>scala.collection.mutable.ListBuffer.empty[com.accounts.domain.AccountDetail]</description><symbolName>scala.collection.generic.GenericCompanion.empty</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>27</id><start>581</start><end>581</end><line>19</line><description>Application.this.ec</description><symbolName>Application.ec</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>368</id><start>839</start><end>852</end><line>20</line><description>cust1.custiId</description><symbolName>com.accounts.domain.CustomerInformation.custiId</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>36</id><start>480</start><end>556</end><line>16</line><description>com.accounts.handlers.AccountsHandler.createAccount(cmd, com.accounts.handlers.AccountsHandler.createAccount$default$2)(AccountsActor.this.ec, AccountsActor.this.rc).map[Unit](((d: com.accounts.domain.GenericHttpResponse) =&gt; actor.this.`package`.actorRef2Scala(senderRef).!(d)(AccountsActor.this.self)))(AccountsActor.this.ec)</description><symbolName>scala.concurrent.Future.map</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>135</id><start>2352</start><end>2354</end><line>45</line><description>&quot;/&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionRequest.scala</source><package>com.accounts.domain</package><class>TransactionRequest</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionRequest</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionRequest.scala</path><id>108</id><start>328</start><end>353</end><line>10</line><description>org.json4s.native.Serialization.write[com.accounts.domain.TransactionRequest](this)(TransactionRequest.this.formats)</description><symbolName>org.json4s.native.Serialization.write</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\RawHttpExecutor.scala</source><package>com.accounts.http</package><class>RawHttpExecutor</class><classType>Class</classType><fullClassName>com.accounts.http.RawHttpExecutor</fullClassName><method>execute</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\RawHttpExecutor.scala</path><id>117</id><start>262</start><end>313</end><line>9</line><description>org.apache.http.impl.client.HttpClientBuilder.create().build().execute(request)</description><symbolName>org.apache.http.impl.client.CloseableHttpClient.execute</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>350</id><start>513</start><end>523</end><line>17</line><description>new java.util.Date()</description><symbolName>java.util.Date.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>9</id><start>281</start><end>285</end><line>11</line><description>scala.None</description><symbolName>scala.None</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>323</id><start>4202</start><end>4216</end><line>127</line><description>akka.http.scaladsl.model.StatusCodes.OK</description><symbolName>akka.http.scaladsl.model.StatusCodes.OK</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>18</id><start>567</start><end>567</end><line>19</line><description>Application.this.actorSystem</description><symbolName>Application.actorSystem</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>getCustomerDetails</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>389</id><start>1484</start><end>1508</end><line>40</line><description>CustomerInfoDatabase.this.customerInfo.get(custId)</description><symbolName>scala.collection.MapLike.get</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>48</id><start>403</start><end>403</end><line>13</line><description>new $anonfun()</description><symbolName>com.accounts.actors.AccountsActor.$anonfun.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>362</id><start>734</start><end>744</end><line>19</line><description>&quot;Siddarth&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>21</id><start>642</start><end>649</end><line>21</line><description>scala.Some.apply[akka.Done](o)</description><symbolName>scala.Some.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>57</id><start>717</start><end>739</end><line>14</line><description>akka.http.scaladsl.model.StatusCodes.BadRequest</description><symbolName>akka.http.scaladsl.model.StatusCodes.BadRequest</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>263</id><start>2743</start><end>2841</end><line>76</line><description>akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))</description><symbolName>akka.http.scaladsl.server.directives.RouteDirectives.complete</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>272</id><start>2932</start><end>2932</end><line>85</line><description>com.accounts.marshallers.Json4sMarshaller.unmarshaller[com.accounts.domain.CreateLinkedAccount](scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount]), com.accounts.marshallers.AccountsMarshaller.serialization, com.accounts.marshallers.AccountsMarshaller.formats)</description><symbolName>com.accounts.marshallers.Json4sMarshaller.unmarshaller</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>344</id><start>404</start><end>414</end><line>16</line><description>new java.util.Date()</description><symbolName>java.util.Date.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</source><package>&lt;empty&gt;</package><class>AccountsServiceApp</class><classType>Object</classType><fullClassName>AccountsServiceApp</fullClassName><method>start</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</path><id>3</id><start>710</start><end>738</end><line>19</line><description>com.accounts.config.ServiceConfiguration.apply(config)</description><symbolName>com.accounts.config.ServiceConfiguration.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>317</id><start>3726</start><end>3778</end><line>109</line><description>akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Credentials&quot;, &quot;true&quot;)</description><symbolName>akka.http.scaladsl.model.headers.RawHeader.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>353</id><start>470</start><end>576</end><line>17</line><description>com.accounts.domain.CustomerInformation.apply(2L, &quot;Dinesh&quot;, &quot;Bhujari&quot;, new java.util.Date(), new java.util.Date(), scala.collection.mutable.ListBuffer.empty[com.accounts.domain.AccountDetail])</description><symbolName>com.accounts.domain.CustomerInformation.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>12</id><start>361</start><end>424</end><line>16</line><description>scala.concurrent.ExecutionContext.fromExecutor(java.util.concurrent.Executors.newFixedThreadPool(10))</description><symbolName>scala.concurrent.ExecutionContext.fromExecutor</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</source><package>com.accounts.config</package><class>HttpConfiguration</class><classType>Object</classType><fullClassName>com.accounts.config.HttpConfiguration</fullClassName><method>apply</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\config\ServiceConfiguration.scala</path><id>84</id><start>346</start><end>366</end><line>10</line><description>scala.StringContext.apply(&quot;&quot;, &quot;.createuri&quot;).s(prefix)</description><symbolName>scala.StringContext.s</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetailsWithTransactions.scala</source><package>com.accounts.domain</package><class>AccountDetailsWithTransactions</class><classType>Class</classType><fullClassName>com.accounts.domain.AccountDetailsWithTransactions</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\AccountDetailsWithTransactions.scala</path><id>93</id><start>371</start><end>382</end><line>12</line><description>org.json4s.NoTypeHints</description><symbolName>org.json4s.NoTypeHints</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionDetails.scala</source><package>com.accounts.domain</package><class>TransactionDetails</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionDetails</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionDetails.scala</path><id>102</id><start>324</start><end>358</end><line>10</line><description>org.json4s.native.Serialization.formats(org.json4s.NoTypeHints)</description><symbolName>org.json4s.Serialization.formats</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>299</id><start>3291</start><end>3361</end><line>90</line><description>marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
  &lt;artifact&gt; val x$15: akka.http.scaladsl.model.StatusCode = x;
  &lt;artifact&gt; val x$16: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
  &lt;artifact&gt; val x$17: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
  &lt;artifact&gt; val x$18: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
  akka.http.scaladsl.model.HttpResponse.apply(x$15, x$17, x$16, x$18)
})(marshalling.this.Marshaller.fromResponse)</description><symbolName>akka.http.scaladsl.marshalling.ToResponseMarshallable.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>326</id><start>4189</start><end>4189</end><line>127</line><description>akka.http.scaladsl.model.HttpResponse.apply$default$4</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply$default$4</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>corsHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>335</id><start>4467</start><end>4494</end><line>135</line><description>akka.http.scaladsl.server.Directives._enhanceRouteWithConcatenation(CORSHandler.this.preflightRequestHandler).~(r)</description><symbolName>akka.http.scaladsl.server.RouteConcatenation.RouteWithConcatenation.~</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>308</id><start>3438</start><end>3536</end><line>93</line><description>marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller))</description><symbolName>akka.http.scaladsl.marshalling.ToResponseMarshallable.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>createAccount</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>380</id><start>1167</start><end>1171</end><line>30</line><description>scala.None</description><symbolName>scala.None</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>resolveFromCache</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>75</id><start>1553</start><end>1577</end><line>36</line><description>context.actorOf(props.apply())</description><symbolName>akka.actor.ActorRefFactory.actorOf</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>281</id><start>3037</start><end>3056</end><line>87</line><description>directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])</description><symbolName>akka.http.scaladsl.server.directives.OnSuccessMagnet.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>290</id><start>3165</start><end>3205</end><line>89</line><description>marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller))</description><symbolName>akka.http.scaladsl.marshalling.ToResponseMarshallable.apply</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>30</id><start>496</start><end>496</end><line>16</line><description>com.accounts.handlers.AccountsHandler.createAccount$default$2</description><symbolName>com.accounts.handlers.AccountsHandler.createAccount$default$2</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>371</id><start>863</start><end>900</end><line>21</line><description>CustomerInfoDatabase.this.customerInfo.put(cust2.custiId, cust2)</description><symbolName>scala.collection.mutable.MapLike.put</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>39</id><start>673</start><end>683</end><line>21</line><description>cmd.custId</description><symbolName>com.accounts.domain.GetAccountDetailsRequest.custId</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionResponse.scala</source><package>com.accounts.domain</package><class>TransactionResponse</class><classType>Class</classType><fullClassName>com.accounts.domain.TransactionResponse</fullClassName><method>toJson</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\domain\TransactionResponse.scala</path><id>111</id><start>315</start><end>315</end><line>10</line><description>TransactionResponse.this.formats</description><symbolName>com.accounts.domain.TransactionResponse.formats</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Object</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>66</id><start>873</start><end>901</end><line>23</line><description>scala.Predef.Map.apply[com.accounts.domain.MessageType, akka.actor.ActorRef]()</description><symbolName>scala.collection.generic.GenMapFactory.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>15</id><start>516</start><end>516</end><line>18</line><description>akka.stream.ActorMaterializer.apply$default$2</description><symbolName>akka.stream.ActorMaterializer.apply$default$2</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>356</id><start>621</start><end>631</end><line>18</line><description>&quot;Kulkarni&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>230</id><start>2242</start><end>2274</end><line>68</line><description>com.accounts.domain.GetAccountDetailsRequest.apply(custId)</description><symbolName>com.accounts.domain.GetAccountDetailsRequest.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>42</id><start>672</start><end>672</end><line>21</line><description>AccountsActor.this.rc</description><symbolName>com.accounts.actors.AccountsActor.rc</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</source><package>com.accounts.actors</package><class>RouterActor</class><classType>Class</classType><fullClassName>com.accounts.actors.RouterActor</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\RouterActor.scala</path><id>51</id><start>567</start><end>567</end><line>11</line><description>RouterActor.this.ec</description><symbolName>com.accounts.actors.RouterActor.ec</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>257</id><start>2785</start><end>2840</end><line>76</line><description>&quot;Unknown error occurred. Please contact administrator.&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</source><package>&lt;empty&gt;</package><class>Application</class><classType>Object</classType><fullClassName>Application</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\Application.scala</path><id>24</id><start>668</start><end>685</end><line>22</line><description>scala.Some.apply[akka.actor.ActorSystem](Application.this.actorSystem)</description><symbolName>scala.Some.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>addCORSHeaders</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>338</id><start>4689</start><end>4730</end><line>145</line><description>response.withHeaders(CORSHandler.this.corsResponseHeaders)</description><symbolName>akka.http.scaladsl.model.HttpResponse.withHeaders</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</source><package>com.accounts.actors</package><class>AccountsActor</class><classType>Class</classType><fullClassName>com.accounts.actors.AccountsActor</fullClassName><method>receive</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\actors\AccountsActor.scala</path><id>33</id><start>543</start><end>543</end><line>17</line><description>AccountsActor.this.self</description><symbolName>akka.actor.Actor.self</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>347</id><start>490</start><end>491</end><line>17</line><description>2L</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>374</id><start>962</start><end>975</end><line>23</line><description>cust4.custiId</description><symbolName>com.accounts.domain.CustomerInformation.custiId</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</source><package>&lt;empty&gt;</package><class>AccountsServiceApp</class><classType>Object</classType><fullClassName>AccountsServiceApp</fullClassName><method>start</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\AccountsServiceApp.scala</path><id>6</id><start>861</start><end>875</end><line>21</line><description>&quot;router-actor&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>221</id><start>2138</start><end>2143</end><line>63</line><description>&quot;app&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>248</id><start>2639</start><end>2674</end><line>73</line><description>akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg)</description><symbolName>akka.http.scaladsl.model.HttpEntity.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>addAccessControlHeaders</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>320</id><start>4037</start><end>4056</end><line>119</line><description>CORSHandler.this.corsResponseHeaders</description><symbolName>com.accounts.routes.CORSHandler.corsResponseHeaders</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>302</id><start>3447</start><end>3478</end><line>93</line><description>akka.http.scaladsl.model.StatusCodes.InternalServerError</description><symbolName>akka.http.scaladsl.model.StatusCodes.InternalServerError</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>CORSHandler</class><classType>Trait</classType><fullClassName>com.accounts.routes.CORSHandler</fullClassName><method>preflightRequestHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>329</id><start>4189</start><end>4312</end><line>127</line><description>akka.http.scaladsl.model.HttpResponse.apply(akka.http.scaladsl.model.StatusCodes.OK, akka.http.scaladsl.model.HttpResponse.apply$default$2, akka.http.scaladsl.model.HttpResponse.apply$default$3, akka.http.scaladsl.model.HttpResponse.apply$default$4).withHeaders(scala.collection.immutable.List.apply[akka.http.scaladsl.model.headers.RawHeader](akka.http.scaladsl.model.headers.RawHeader.apply(&quot;Access-Control-Allow-Methods&quot;, &quot;OPTIONS, POST, PUT, GET, DELETE&quot;)))</description><symbolName>akka.http.scaladsl.model.HttpResponse.withHeaders</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>203</id><start>1207</start><end>1233</end><line>31</line><description>akka.util.Timeout.apply(scala.concurrent.duration.`package`.DurationInt(6000).milliseconds)</description><symbolName>akka.util.Timeout.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>apiRoutes</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>212</id><start>1411</start><end>1536</end><line>37</line><description>server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.handleExceptions(AccountsRoutes.this.exceptionHandler)).apply(AccountsRoutes.this.logAccess(AccountsRoutes.this.corsHandler(AccountsRoutes.this.routes(mat))))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>275</id><start>2923</start><end>2954</end><line>85</line><description>akka.http.scaladsl.server.Directives.entity[com.accounts.domain.CreateLinkedAccount](akka.http.scaladsl.server.Directives.as[com.accounts.domain.CreateLinkedAccount](unmarshalling.this.Unmarshaller.messageUnmarshallerFromEntityUnmarshaller[com.accounts.domain.CreateLinkedAccount](com.accounts.marshallers.Json4sMarshaller.unmarshaller[com.accounts.domain.CreateLinkedAccount](scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount]), com.accounts.marshallers.AccountsMarshaller.serialization, com.accounts.marshallers.AccountsMarshaller.formats))))</description><symbolName>akka.http.scaladsl.server.directives.MarshallingDirectives.entity</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>284</id><start>3176</start><end>3194</end><line>89</line><description>akka.http.scaladsl.model.MediaTypes.application/json</description><symbolName>akka.http.scaladsl.model.MediaTypes.application/json</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>311</id><start>2923</start><end>3566</end><line>85</line><description>server.this.Directive.addDirectiveApply[(com.accounts.domain.CreateLinkedAccount,)](akka.http.scaladsl.server.Directives.entity[com.accounts.domain.CreateLinkedAccount](akka.http.scaladsl.server.Directives.as[com.accounts.domain.CreateLinkedAccount](unmarshalling.this.Unmarshaller.messageUnmarshallerFromEntityUnmarshaller[com.accounts.domain.CreateLinkedAccount](com.accounts.marshallers.Json4sMarshaller.unmarshaller[com.accounts.domain.CreateLinkedAccount](scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount]), com.accounts.marshallers.AccountsMarshaller.serialization, com.accounts.marshallers.AccountsMarshaller.formats)))))(util.this.ApplyConverter.hac1[com.accounts.domain.CreateLinkedAccount]).apply(((c: com.accounts.domain.CreateLinkedAccount) =&gt; {
  val genericHttpResponse: scala.concurrent.Future[Any] = {
    &lt;artifact&gt; val qual$2: akka.pattern.AskableActorRef = akka.pattern.`package`.ask(rootActor);
    &lt;artifact&gt; val x$12: com.accounts.domain.CreateLinkedAccount = c;
    &lt;artifact&gt; val x$13: akka.util.Timeout = timeout;
    &lt;artifact&gt; val x$14: akka.actor.ActorRef = qual$2.?$default$3(x$12);
    qual$2.?(x$12)(x$13, x$14)
  };
  server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$3: Any) =&gt; x0$3 match {
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
      &lt;artifact&gt; val x$15: akka.http.scaladsl.model.StatusCode = x;
      &lt;artifact&gt; val x$16: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
      &lt;artifact&gt; val x$17: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
      &lt;artifact&gt; val x$18: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
      akka.http.scaladsl.model.HttpResponse.apply(x$15, x$17, x$16, x$18)
    })(marshalling.this.Marshaller.fromResponse))
    case (p @ _) =&gt; {
      scala.Predef.println(p);
      akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
    }
  }))
}))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>293</id><start>3336</start><end>3354</end><line>90</line><description>model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json)</description><symbolName>akka.http.scaladsl.model.ContentType.apply</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</source><package>com.accounts.storage</package><class>CustomerInfoDatabase</class><classType>Class</classType><fullClassName>com.accounts.storage.CustomerInfoDatabase</fullClassName><method>init</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\storage\CustomerInfoDatabase.scala</path><id>365</id><start>767</start><end>777</end><line>19</line><description>new java.util.Date()</description><symbolName>java.util.Date.&lt;init&gt;</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>266</id><start>2167</start><end>2874</end><line>65</line><description>server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.get).apply(server.this.Directive.addDirectiveApply[(Long,)](akka.http.scaladsl.server.Directives.path[(Long,)](akka.http.scaladsl.server.Directives.LongNumber))(util.this.ApplyConverter.hac1[Long]).apply(((custId: Long) =&gt; {
  val getAccountsMessage: com.accounts.domain.GetAccountDetailsRequest = com.accounts.domain.GetAccountDetailsRequest.apply(custId);
  val genericHttpResponse: scala.concurrent.Future[Any] = {
    &lt;artifact&gt; val qual$1: akka.pattern.AskableActorRef = akka.pattern.`package`.ask(rootActor);
    &lt;artifact&gt; val x$5: com.accounts.domain.GetAccountDetailsRequest = getAccountsMessage;
    &lt;artifact&gt; val x$6: akka.util.Timeout = timeout;
    &lt;artifact&gt; val x$7: akka.actor.ActorRef = qual$1.?$default$3(x$5);
    qual$1.?(x$5)(x$6, x$7)
  };
  server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$2: Any) =&gt; x0$2 match {
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
      &lt;artifact&gt; val x$8: akka.http.scaladsl.model.StatusCode = x;
      &lt;artifact&gt; val x$9: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
      &lt;artifact&gt; val x$10: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
      &lt;artifact&gt; val x$11: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
      akka.http.scaladsl.model.HttpResponse.apply(x$8, x$10, x$9, x$11)
    })(marshalling.this.Marshaller.fromResponse))
    case (p @ _) =&gt; {
      scala.Predef.println(p);
      akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
    }
  }))
})))</description><symbolName>scala.Function1.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>239</id><start>2493</start><end>2511</end><line>72</line><description>model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json)</description><symbolName>akka.http.scaladsl.model.ContentType.apply</symbolName><treeName>ApplyImplicitView</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>314</id><start>2167</start><end>3586</end><line>81</line><description>akka.http.scaladsl.server.Directives._enhanceRouteWithConcatenation(server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.get).apply(server.this.Directive.addDirectiveApply[(Long,)](akka.http.scaladsl.server.Directives.path[(Long,)](akka.http.scaladsl.server.Directives.LongNumber))(util.this.ApplyConverter.hac1[Long]).apply(((custId: Long) =&gt; {
  val getAccountsMessage: com.accounts.domain.GetAccountDetailsRequest = com.accounts.domain.GetAccountDetailsRequest.apply(custId);
  val genericHttpResponse: scala.concurrent.Future[Any] = {
    &lt;artifact&gt; val qual$1: akka.pattern.AskableActorRef = akka.pattern.`package`.ask(rootActor);
    &lt;artifact&gt; val x$5: com.accounts.domain.GetAccountDetailsRequest = getAccountsMessage;
    &lt;artifact&gt; val x$6: akka.util.Timeout = timeout;
    &lt;artifact&gt; val x$7: akka.actor.ActorRef = qual$1.?$default$3(x$5);
    qual$1.?(x$5)(x$6, x$7)
  };
  server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$2: Any) =&gt; x0$2 match {
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
      &lt;artifact&gt; val x$8: akka.http.scaladsl.model.StatusCode = x;
      &lt;artifact&gt; val x$9: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
      &lt;artifact&gt; val x$10: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
      &lt;artifact&gt; val x$11: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
      akka.http.scaladsl.model.HttpResponse.apply(x$8, x$10, x$9, x$11)
    })(marshalling.this.Marshaller.fromResponse))
    case (p @ _) =&gt; {
      scala.Predef.println(p);
      akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
    }
  }))
})))).~(server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.post).apply(server.this.Directive.addByNameNullaryApply(akka.http.scaladsl.server.Directives.pathEnd).apply(server.this.Directive.addDirectiveApply[(com.accounts.domain.CreateLinkedAccount,)](akka.http.scaladsl.server.Directives.entity[com.accounts.domain.CreateLinkedAccount](akka.http.scaladsl.server.Directives.as[com.accounts.domain.CreateLinkedAccount](unmarshalling.this.Unmarshaller.messageUnmarshallerFromEntityUnmarshaller[com.accounts.domain.CreateLinkedAccount](com.accounts.marshallers.Json4sMarshaller.unmarshaller[com.accounts.domain.CreateLinkedAccount](scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount]), com.accounts.marshallers.AccountsMarshaller.serialization, com.accounts.marshallers.AccountsMarshaller.formats)))))(util.this.ApplyConverter.hac1[com.accounts.domain.CreateLinkedAccount]).apply(((c: com.accounts.domain.CreateLinkedAccount) =&gt; {
  val genericHttpResponse: scala.concurrent.Future[Any] = {
    &lt;artifact&gt; val qual$2: akka.pattern.AskableActorRef = akka.pattern.`package`.ask(rootActor);
    &lt;artifact&gt; val x$12: com.accounts.domain.CreateLinkedAccount = c;
    &lt;artifact&gt; val x$13: akka.util.Timeout = timeout;
    &lt;artifact&gt; val x$14: akka.actor.ActorRef = qual$2.?$default$3(x$12);
    qual$2.?(x$12)(x$13, x$14)
  };
  server.this.Directive.addDirectiveApply[(Any,)](akka.http.scaladsl.server.Directives.onSuccess(directives.this.OnSuccessMagnet.apply[Any](genericHttpResponse)(util.this.Tupler.forAnyRef[Any])))(util.this.ApplyConverter.hac1[Any]).apply(((x0$3: Any) =&gt; x0$3 match {
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse(akka.http.scaladsl.model.StatusCodes.OK, (t @ (_: com.accounts.common.JsonResponse))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpEntity.Strict](akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson))(marshalling.this.Marshaller.liftMarshaller[akka.http.scaladsl.model.HttpEntity.Strict](marshalling.this.Marshaller.MessageEntityMarshaller)))
    case (statusCode: akka.http.scaladsl.model.StatusCode, response: Any)com.accounts.domain.GenericHttpResponse((x @ (_: akka.http.scaladsl.model.StatusCode)), (msg @ (_: String))) =&gt; akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
      &lt;artifact&gt; val x$15: akka.http.scaladsl.model.StatusCode = x;
      &lt;artifact&gt; val x$16: akka.http.scaladsl.model.HttpEntity.Strict = akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), msg);
      &lt;artifact&gt; val x$17: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
      &lt;artifact&gt; val x$18: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
      akka.http.scaladsl.model.HttpResponse.apply(x$15, x$17, x$16, x$18)
    })(marshalling.this.Marshaller.fromResponse))
    case (p @ _) =&gt; {
      scala.Predef.println(p);
      akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[(akka.http.scaladsl.model.StatusCodes.ServerError, String)](scala.Tuple2.apply[akka.http.scaladsl.model.StatusCodes.ServerError, String](akka.http.scaladsl.model.StatusCodes.InternalServerError, &quot;Unknown error occurred. Please contact administrator.&quot;))(marshalling.this.Marshaller.fromStatusCodeAndValue[akka.http.scaladsl.model.StatusCodes.ServerError, String](scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError], marshalling.this.Marshaller.StringMarshaller)))
    }
  }))
})))))</description><symbolName>akka.http.scaladsl.server.RouteConcatenation.RouteWithConcatenation.~</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</source><package>com.accounts.marshallers</package><class>Json4sMarshaller</class><classType>Trait</classType><fullClassName>com.accounts.marshallers.Json4sMarshaller</fullClassName><method>unmarshaller</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\Json4sMarshaller.scala</path><id>179</id><start>795</start><end>825</end><line>22</line><description>serialization.read[A](dataString)(formats, evidence$1)</description><symbolName>org.json4s.Serialization.read</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>152</id><start>3046</start><end>3054</end><line>63</line><description>&quot;http://&quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>188</id><start>1129</start><end>1137</end><line>27</line><description>&quot;Error &quot;</description><symbolName>&lt;nosymbol&gt;</symbolName><treeName>Literal</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>260</id><start>2751</start><end>2751</end><line>76</line><description>marshalling.this.Marshaller.StringMarshaller</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToEntityMarshallers.StringMarshaller</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>269</id><start>2932</start><end>2932</end><line>85</line><description>scala.reflect.ManifestFactory.classType[com.accounts.domain.CreateLinkedAccount](classOf[com.accounts.domain.CreateLinkedAccount])</description><symbolName>scala.reflect.ManifestFactory.classType</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\AccountsMarshaller.scala</source><package>com.accounts.marshallers</package><class>AccountsMarshaller</class><classType>Object</classType><fullClassName>com.accounts.marshallers.AccountsMarshaller</fullClassName><method>&lt;none&gt;</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\marshallers\AccountsMarshaller.scala</path><id>170</id><start>281</start><end>336</end><line>10</line><description>org.json4s.native.Serialization.formats(org.json4s.ShortTypeHints.apply(AccountsMarshaller.this.classList))</description><symbolName>org.json4s.Serialization.formats</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>getTransactions</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>143</id><start>2450</start><end>2486</end><line>48</line><description>response.getStatusLine().getStatusCode()</description><symbolName>org.apache.http.StatusLine.getStatusCode</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>toLogEntry</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>215</id><start>1678</start><end>1706</end><line>48</line><description>akka.event.Logging.InfoLevel</description><symbolName>akka.event.Logging.InfoLevel</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>287</id><start>3165</start><end>3205</end><line>89</line><description>akka.http.scaladsl.model.HttpEntity.apply(model.this.ContentType.apply(akka.http.scaladsl.model.MediaTypes.application/json), t.toJson)</description><symbolName>akka.http.scaladsl.model.HttpEntity.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</source><package>com.accounts.http</package><class>TransActionManager</class><classType>Object</classType><fullClassName>com.accounts.http.TransActionManager</fullClassName><method>postTransaction</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\http\TransActionManager.scala</path><id>161</id><start>3160</start><end>3270</end><line>66</line><description>org.apache.http.client.entity.EntityBuilder.create().setText(transactionRequest.toJson).setContentType(org.apache.http.entity.ContentType.APPLICATION_JSON).build()</description><symbolName>org.apache.http.client.entity.EntityBuilder.build</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>242</id><start>2492</start><end>2492</end><line>72</line><description>marshalling.this.Marshaller.MessageEntityMarshaller</description><symbolName>akka.http.scaladsl.marshalling.PredefinedToEntityMarshallers.MessageEntityMarshaller</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>251</id><start>2605</start><end>2675</end><line>73</line><description>akka.http.scaladsl.model.HttpResponse.apply(x$8, x$10, x$9, x$11)</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>exceptionHandler</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>197</id><start>1065</start><end>1154</end><line>27</line><description>akka.http.scaladsl.server.Directives.complete(marshalling.this.ToResponseMarshallable.apply[akka.http.scaladsl.model.HttpResponse]({
  &lt;artifact&gt; val x$1: akka.http.scaladsl.model.StatusCodes.ServerError = akka.http.scaladsl.model.StatusCodes.InternalServerError;
  &lt;artifact&gt; val x$2: akka.http.scaladsl.model.HttpEntity.Strict = model.this.HttpEntity.apply(&quot;Error &quot;.+(t.getMessage()));
  &lt;artifact&gt; val x$3: scala.collection.immutable.Seq[akka.http.scaladsl.model.HttpHeader] = akka.http.scaladsl.model.HttpResponse.apply$default$2;
  &lt;artifact&gt; val x$4: akka.http.scaladsl.model.HttpProtocol = akka.http.scaladsl.model.HttpResponse.apply$default$4;
  akka.http.scaladsl.model.HttpResponse.apply(x$1, x$3, x$2, x$4)
})(marshalling.this.Marshaller.fromResponse))</description><symbolName>akka.http.scaladsl.server.directives.RouteDirectives.complete</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>224</id><start>2138</start><end>2156</end><line>63</line><description>akka.http.scaladsl.server.Directives._segmentStringToPathMatcher(&quot;app&quot;)./[Unit](akka.http.scaladsl.server.Directives._segmentStringToPathMatcher(&quot;accounts&quot;))(TupleOps.this.Join.join0P[Unit])</description><symbolName>akka.http.scaladsl.server.PathMatcher./</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsRoutes</class><classType>Class</classType><fullClassName>com.accounts.routes.AccountsRoutes</fullClassName><method>routes</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>206</id><start>1297</start><end>1339</end><line>33</line><description>AccountsOperationRoute.route(AccountsRoutes.this.routingActor)(AccountsRoutes.this.timeout)</description><symbolName>com.accounts.routes.AccountsOperationRoute.route</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>233</id><start>2309</start><end>2339</end><line>69</line><description>qual$1.?(x$5)(x$6, x$7)</description><symbolName>akka.pattern.AskableActorRef.?</symbolName><treeName>ApplyToImplicitArgs</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>296</id><start>3291</start><end>3291</end><line>90</line><description>akka.http.scaladsl.model.HttpResponse.apply$default$4</description><symbolName>akka.http.scaladsl.model.HttpResponse.apply$default$4</symbolName><treeName>Select</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>278</id><start>3010</start><end>3010</end><line>86</line><description>qual$2.?$default$3(x$12)</description><symbolName>akka.pattern.AskableActorRef.?$default$3</symbolName><treeName>Apply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
<statement><source>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</source><package>com.accounts.routes</package><class>AccountsOperationRoute</class><classType>Object</classType><fullClassName>com.accounts.routes.AccountsOperationRoute</fullClassName><method>route</method><path>D:\NOTBACKEDUP\exp\bank\Accounts\src\main\scala\com\accounts\routes\AccountsRoutes.scala</path><id>305</id><start>3446</start><end>3446</end><line>93</line><description>scala.Predef.$conforms[akka.http.scaladsl.model.StatusCodes.ServerError]</description><symbolName>scala.Predef.$conforms</symbolName><treeName>TypeApply</treeName><branch>false</branch><count>0</count><ignored>false</ignored></statement>
</statements>